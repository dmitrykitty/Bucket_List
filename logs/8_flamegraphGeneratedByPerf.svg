<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="790.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="773" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="773" > </text>
<g id="frames">
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (727,025 samples, 0.01%)</title><rect x="808.3" y="309" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="811.34" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (5,074,694 samples, 0.08%)</title><rect x="783.4" y="229" width="1.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="786.36" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (1,298,678 samples, 0.02%)</title><rect x="1168.6" y="501" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1171.58" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (626,557 samples, 0.01%)</title><rect x="761.0" y="117" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="764.04" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (2,197,393 samples, 0.04%)</title><rect x="848.2" y="325" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="851.15" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,509,214 samples, 0.04%)</title><rect x="1034.5" y="325" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1037.48" y="335.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,385,741 samples, 0.02%)</title><rect x="791.4" y="261" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="794.42" y="271.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (135,679,053 samples, 2.26%)</title><rect x="1016.2" y="373" width="26.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1019.24" y="383.5" >s..</text>
</g>
<g >
<title>SortedUniqueVectoredList::Bucket::Bucket (232,718,065 samples, 3.87%)</title><rect x="379.2" y="469" width="45.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="382.17" y="479.5" >Sort..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (737,332 samples, 0.01%)</title><rect x="1046.0" y="373" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1048.97" y="383.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (735,461 samples, 0.01%)</title><rect x="995.1" y="341" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="998.13" y="351.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (2,832,645 samples, 0.05%)</title><rect x="830.3" y="293" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="833.33" y="303.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (70,409,603 samples, 1.17%)</title><rect x="810.6" y="309" width="13.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="813.59" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (736,288 samples, 0.01%)</title><rect x="881.2" y="357" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="884.17" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (725,074 samples, 0.01%)</title><rect x="751.5" y="117" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="754.51" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1,278,752 samples, 0.02%)</title><rect x="514.7" y="421" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="517.66" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,366,517 samples, 0.02%)</title><rect x="1148.0" y="437" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1150.98" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (678,034 samples, 0.01%)</title><rect x="1172.7" y="373" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1175.71" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (5,294,047 samples, 0.09%)</title><rect x="418.7" y="421" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="421.70" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (3,343,510 samples, 0.06%)</title><rect x="405.6" y="405" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="408.55" y="415.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (651,156 samples, 0.01%)</title><rect x="1166.4" y="437" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1169.37" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (683,481 samples, 0.01%)</title><rect x="1169.6" y="325" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1172.65" y="335.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (1,222,287 samples, 0.02%)</title><rect x="382.8" y="437" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="385.80" y="447.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (30,946,819 samples, 0.51%)</title><rect x="1075.8" y="357" width="6.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1078.84" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (737,153 samples, 0.01%)</title><rect x="448.1" y="421" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="451.08" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (5,810,782 samples, 0.10%)</title><rect x="756.7" y="133" width="1.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="759.67" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (23,292,840 samples, 0.39%)</title><rect x="521.6" y="405" width="4.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="524.59" y="415.5" ></text>
</g>
<g >
<title>std::for_each&lt;__gnu_cxx::__normal_iterator&lt;testing::TestSuite* const*, std::vector&lt;testing::TestSuite*, std::allocator&lt;testing::TestSuite*&gt; &gt; &gt;, void  (679,871 samples, 0.01%)</title><rect x="1178.2" y="629" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1181.18" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (654,500 samples, 0.01%)</title><rect x="907.1" y="325" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="910.09" y="335.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (1,386,167 samples, 0.02%)</title><rect x="949.7" y="357" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="952.65" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2,084,682 samples, 0.03%)</title><rect x="441.8" y="437" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="444.81" y="447.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (12,914,978 samples, 0.21%)</title><rect x="795.2" y="325" width="2.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="798.18" y="335.5" ></text>
</g>
<g >
<title>std::operator&lt; (1,846,234 samples, 0.03%)</title><rect x="937.2" y="357" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="940.18" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (632,369 samples, 0.01%)</title><rect x="863.7" y="277" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="866.73" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (662,162 samples, 0.01%)</title><rect x="777.4" y="165" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="780.43" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (627,847 samples, 0.01%)</title><rect x="773.4" y="117" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="776.39" y="127.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (1,459,893 samples, 0.02%)</title><rect x="448.4" y="469" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="451.37" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (632,770 samples, 0.01%)</title><rect x="794.8" y="277" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="797.82" y="287.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (6,771,131 samples, 0.11%)</title><rect x="1170.6" y="389" width="1.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1173.58" y="399.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Val_less_iter&gt; (37,905,469 samples, 0.63%)</title><rect x="496.4" y="421" width="7.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="499.36" y="431.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (17,019,678 samples, 0.28%)</title><rect x="759.8" y="165" width="3.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="762.82" y="175.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4,137,926 samples, 0.07%)</title><rect x="939.5" y="357" width="0.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="942.55" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (3,404,891 samples, 0.06%)</title><rect x="778.8" y="181" width="0.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="781.80" y="191.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (662,162 samples, 0.01%)</title><rect x="777.4" y="197" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="780.43" y="207.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (45,829,076 samples, 0.76%)</title><rect x="558.8" y="357" width="9.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="561.80" y="367.5" ></text>
</g>
<g >
<title>do_lookup_x (830,049 samples, 0.01%)</title><rect x="1189.3" y="709" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1192.34" y="719.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (661,909 samples, 0.01%)</title><rect x="1125.9" y="421" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1128.88" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (1,351,645 samples, 0.02%)</title><rect x="1170.8" y="373" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1173.84" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (8,347,632 samples, 0.14%)</title><rect x="1085.5" y="357" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1088.46" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (717,291 samples, 0.01%)</title><rect x="746.0" y="101" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="749.02" y="111.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (734,938 samples, 0.01%)</title><rect x="1113.5" y="437" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1116.49" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (657,369 samples, 0.01%)</title><rect x="783.2" y="229" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="786.23" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (8,665,671 samples, 0.14%)</title><rect x="786.5" y="261" width="1.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="789.54" y="271.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (9,759,155 samples, 0.16%)</title><rect x="831.4" y="341" width="1.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="834.43" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4,073,092 samples, 0.07%)</title><rect x="339.8" y="421" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="342.84" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (736,370 samples, 0.01%)</title><rect x="1174.1" y="421" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1177.14" y="431.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::Iterator::operator++ (2,081,386 samples, 0.03%)</title><rect x="378.1" y="485" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="381.14" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (724,287 samples, 0.01%)</title><rect x="758.9" y="85" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="761.90" y="95.5" ></text>
</g>
<g >
<title>__tls_get_addr (659,164 samples, 0.01%)</title><rect x="403.0" y="405" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="406.04" y="415.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (721,906 samples, 0.01%)</title><rect x="759.0" y="149" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="762.04" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (3,484,678 samples, 0.06%)</title><rect x="579.8" y="373" width="0.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="582.77" y="383.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (2,793,145 samples, 0.05%)</title><rect x="832.8" y="277" width="0.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="835.80" y="287.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (736,255 samples, 0.01%)</title><rect x="402.5" y="405" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="405.47" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (635,236 samples, 0.01%)</title><rect x="763.5" y="181" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="766.55" y="191.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (7,128,124 samples, 0.12%)</title><rect x="1040.6" y="341" width="1.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1043.58" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (661,044 samples, 0.01%)</title><rect x="1169.2" y="437" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1172.25" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (658,915 samples, 0.01%)</title><rect x="758.5" y="117" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="761.49" y="127.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (9,820,269 samples, 0.16%)</title><rect x="1089.1" y="357" width="2.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1092.14" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (682,386 samples, 0.01%)</title><rect x="1171.0" y="325" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1173.98" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1,460,991 samples, 0.02%)</title><rect x="765.9" y="117" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="768.92" y="127.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (736,933 samples, 0.01%)</title><rect x="424.9" y="469" width="0.1" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="427.86" y="479.5" ></text>
</g>
<g >
<title>__tls_get_addr (1,114,519 samples, 0.02%)</title><rect x="994.0" y="373" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="996.99" y="383.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (1,305,088 samples, 0.02%)</title><rect x="990.7" y="373" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="993.72" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (635,125 samples, 0.01%)</title><rect x="775.7" y="181" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="778.65" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,718,493 samples, 0.05%)</title><rect x="344.9" y="453" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="347.89" y="463.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (721,246 samples, 0.01%)</title><rect x="870.3" y="293" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="873.30" y="303.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (4,790,298 samples, 0.08%)</title><rect x="458.7" y="469" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="461.66" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (707,595 samples, 0.01%)</title><rect x="430.2" y="469" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="433.22" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (726,231 samples, 0.01%)</title><rect x="748.0" y="69" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="751.01" y="79.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (735,313 samples, 0.01%)</title><rect x="365.9" y="405" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="368.86" y="415.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (14,327,867 samples, 0.24%)</title><rect x="618.3" y="373" width="2.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="621.30" y="383.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (15,311,250 samples, 0.25%)</title><rect x="1077.2" y="341" width="3.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1080.15" y="351.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4,665,489 samples, 0.08%)</title><rect x="769.4" y="117" width="0.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="772.43" y="127.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4,316,962 samples, 0.07%)</title><rect x="800.9" y="309" width="0.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="803.91" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1,935,086 samples, 0.03%)</title><rect x="774.6" y="149" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="777.55" y="159.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (709,831 samples, 0.01%)</title><rect x="745.9" y="117" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="748.88" y="127.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (5,033,412 samples, 0.08%)</title><rect x="635.0" y="389" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="638.02" y="399.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (1,880,107 samples, 0.03%)</title><rect x="936.8" y="293" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="939.81" y="303.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (736,771 samples, 0.01%)</title><rect x="449.4" y="469" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="452.36" y="479.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1,355,636 samples, 0.02%)</title><rect x="447.1" y="341" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="450.12" y="351.5" ></text>
</g>
<g >
<title>[tests] (2,088,429 samples, 0.03%)</title><rect x="401.9" y="405" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="404.94" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (704,066 samples, 0.01%)</title><rect x="758.4" y="117" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="761.36" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,117,148 samples, 0.04%)</title><rect x="811.4" y="293" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="814.42" y="303.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (4,307,586 samples, 0.07%)</title><rect x="656.4" y="389" width="0.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="659.42" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (721,445 samples, 0.01%)</title><rect x="649.1" y="389" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="652.08" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (674,873 samples, 0.01%)</title><rect x="901.6" y="341" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="904.57" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (638,699 samples, 0.01%)</title><rect x="443.4" y="405" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="446.38" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (8,416,973 samples, 0.14%)</title><rect x="887.6" y="357" width="1.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="890.64" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (9,934,816 samples, 0.17%)</title><rect x="612.3" y="373" width="1.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="615.30" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (656,958 samples, 0.01%)</title><rect x="775.3" y="197" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="778.30" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,360,183 samples, 0.02%)</title><rect x="1171.5" y="373" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1174.51" y="383.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (729,788 samples, 0.01%)</title><rect x="1065.6" y="373" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1068.61" y="383.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (731,473 samples, 0.01%)</title><rect x="784.5" y="261" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="787.50" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (34,877,556 samples, 0.58%)</title><rect x="730.5" y="389" width="6.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="733.51" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (3,443,598 samples, 0.06%)</title><rect x="343.9" y="453" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="346.94" y="463.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (255,526,880 samples, 4.25%)</title><rect x="744.5" y="341" width="50.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.51" y="351.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3,826,635 samples, 0.06%)</title><rect x="790.2" y="245" width="0.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="793.24" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4,468,178 samples, 0.07%)</title><rect x="760.8" y="149" width="0.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="763.82" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1,365,504 samples, 0.02%)</title><rect x="933.6" y="325" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="936.55" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (2,125,563 samples, 0.04%)</title><rect x="823.0" y="293" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="826.04" y="303.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadContextBase::OnJoined (5,990,209 samples, 0.10%)</title><rect x="255.9" y="693" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="258.91" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (11,981,884 samples, 0.20%)</title><rect x="1126.5" y="421" width="2.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1129.55" y="431.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (806,127 samples, 0.01%)</title><rect x="130.3" y="677" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="133.35" y="687.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1,314,696 samples, 0.02%)</title><rect x="876.5" y="309" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="879.54" y="319.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,379,578 samples, 0.02%)</title><rect x="878.8" y="261" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="881.84" y="271.5" ></text>
</g>
<g >
<title>[unknown] (5,990,209 samples, 0.10%)</title><rect x="255.9" y="661" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="258.91" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (633,951 samples, 0.01%)</title><rect x="752.4" y="85" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="755.43" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,718,022 samples, 0.05%)</title><rect x="752.6" y="85" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="755.56" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (17,076,297 samples, 0.28%)</title><rect x="1140.1" y="405" width="3.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1143.10" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (737,806 samples, 0.01%)</title><rect x="1145.3" y="437" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1148.34" y="447.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1,607,627 samples, 0.03%)</title><rect x="1173.4" y="485" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1176.40" y="495.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (633,523 samples, 0.01%)</title><rect x="764.5" y="149" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="767.46" y="159.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (12,959,077 samples, 0.22%)</title><rect x="872.5" y="293" width="2.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="875.45" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (640,127 samples, 0.01%)</title><rect x="1042.9" y="373" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1045.88" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (632,770 samples, 0.01%)</title><rect x="794.8" y="309" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="797.82" y="319.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (15,265,690 samples, 0.25%)</title><rect x="675.9" y="357" width="3.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="678.86" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (7,908,677 samples, 0.13%)</title><rect x="1130.4" y="421" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1133.41" y="431.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (1,473,607 samples, 0.02%)</title><rect x="824.8" y="325" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="827.83" y="335.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (644,352 samples, 0.01%)</title><rect x="467.6" y="437" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="470.61" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (14,938,306 samples, 0.25%)</title><rect x="928.8" y="309" width="2.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="931.82" y="319.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (736,145 samples, 0.01%)</title><rect x="495.3" y="421" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="498.32" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1,928,501 samples, 0.03%)</title><rect x="503.9" y="341" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="506.95" y="351.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (12,455,995 samples, 0.21%)</title><rect x="632.4" y="373" width="2.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="635.45" y="383.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (2,621,960 samples, 0.04%)</title><rect x="997.0" y="389" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1000.01" y="399.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (1,322,942 samples, 0.02%)</title><rect x="802.4" y="325" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="805.45" y="335.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (1,391,533 samples, 0.02%)</title><rect x="423.9" y="421" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="426.90" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (7,330,051 samples, 0.12%)</title><rect x="592.1" y="405" width="1.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="595.12" y="415.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (662,137 samples, 0.01%)</title><rect x="939.8" y="325" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="942.83" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1,224,678 samples, 0.02%)</title><rect x="1180.1" y="709" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1183.06" y="719.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (12,668,001 samples, 0.21%)</title><rect x="792.2" y="309" width="2.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="795.20" y="319.5" ></text>
</g>
<g >
<title>[tests] (736,265 samples, 0.01%)</title><rect x="895.1" y="341" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="898.12" y="351.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (657,941 samples, 0.01%)</title><rect x="941.0" y="373" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="944.01" y="383.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (7,610,716 samples, 0.13%)</title><rect x="862.2" y="277" width="1.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="865.24" y="287.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (661,511 samples, 0.01%)</title><rect x="800.5" y="277" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="803.51" y="287.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (736,248 samples, 0.01%)</title><rect x="487.4" y="373" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="490.42" y="383.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (12,921,681 samples, 0.22%)</title><rect x="786.1" y="293" width="2.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="789.05" y="303.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (659,113 samples, 0.01%)</title><rect x="883.9" y="293" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="886.92" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (2,047,106 samples, 0.03%)</title><rect x="582.3" y="373" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="585.26" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (625,902 samples, 0.01%)</title><rect x="825.1" y="325" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="828.12" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (5,270,548 samples, 0.09%)</title><rect x="614.8" y="389" width="1.0" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="617.79" y="399.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate (658,419 samples, 0.01%)</title><rect x="1151.9" y="453" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1154.88" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (612,575 samples, 0.01%)</title><rect x="828.5" y="325" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="831.54" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (716,093 samples, 0.01%)</title><rect x="500.6" y="389" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="503.56" y="399.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (28,840,925 samples, 0.48%)</title><rect x="697.1" y="357" width="5.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="700.08" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (5,539,311 samples, 0.09%)</title><rect x="413.4" y="405" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="416.42" y="415.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (736,692 samples, 0.01%)</title><rect x="783.0" y="213" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="785.95" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (1,827,957 samples, 0.03%)</title><rect x="442.8" y="421" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="445.77" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (220,914,577 samples, 3.68%)</title><rect x="1106.9" y="453" width="43.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1109.90" y="463.5" >std:..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,858,917 samples, 0.05%)</title><rect x="654.9" y="389" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="657.86" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4,721,542 samples, 0.08%)</title><rect x="776.0" y="165" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="779.00" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (11,543,472 samples, 0.19%)</title><rect x="1031.6" y="341" width="2.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1034.58" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,253,201 samples, 0.02%)</title><rect x="600.0" y="389" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="603.02" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (737,038 samples, 0.01%)</title><rect x="502.7" y="357" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="505.74" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (6,321,581 samples, 0.11%)</title><rect x="715.7" y="357" width="1.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="718.73" y="367.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;unsigned long, unsigned long&gt; (736,370 samples, 0.01%)</title><rect x="1174.1" y="485" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1177.14" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (651,089 samples, 0.01%)</title><rect x="746.4" y="85" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="749.42" y="95.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (736,370 samples, 0.01%)</title><rect x="1174.1" y="469" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1177.14" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (630,772 samples, 0.01%)</title><rect x="760.9" y="133" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="763.92" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (3,416,617 samples, 0.06%)</title><rect x="745.1" y="117" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="748.08" y="127.5" ></text>
</g>
<g >
<title>std::__copy_move_backward_a1&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (2,665,517 samples, 0.04%)</title><rect x="503.8" y="389" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="506.80" y="399.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (47,224,653 samples, 0.79%)</title><rect x="749.8" y="149" width="9.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="752.77" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (29,163,225 samples, 0.49%)</title><rect x="1114.1" y="437" width="5.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1117.07" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (10,895,896 samples, 0.18%)</title><rect x="415.6" y="389" width="2.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="418.64" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,607,627 samples, 0.03%)</title><rect x="1173.4" y="469" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1176.40" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (658,363 samples, 0.01%)</title><rect x="428.7" y="469" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="431.69" y="479.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (659,510 samples, 0.01%)</title><rect x="797.6" y="309" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="800.59" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (2,751,849 samples, 0.05%)</title><rect x="747.6" y="101" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="750.61" y="111.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1,354,482 samples, 0.02%)</title><rect x="1143.5" y="405" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1146.46" y="415.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (670,334 samples, 0.01%)</title><rect x="885.2" y="309" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="888.18" y="319.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (736,370 samples, 0.01%)</title><rect x="1174.1" y="389" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1177.14" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3,491,104 samples, 0.06%)</title><rect x="376.4" y="437" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="379.39" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (3,265,911 samples, 0.05%)</title><rect x="660.6" y="389" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="663.62" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1,455,364 samples, 0.02%)</title><rect x="879.3" y="293" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="882.25" y="303.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (628,612 samples, 0.01%)</title><rect x="761.3" y="101" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="764.26" y="111.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (2,147,614 samples, 0.04%)</title><rect x="920.6" y="293" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="923.57" y="303.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (735,964 samples, 0.01%)</title><rect x="801.8" y="325" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="804.76" y="335.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1,467,819 samples, 0.02%)</title><rect x="375.5" y="357" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="378.48" y="367.5" ></text>
</g>
<g >
<title>[tests] (1,959,419 samples, 0.03%)</title><rect x="534.9" y="389" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="537.93" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (34,333,315 samples, 0.57%)</title><rect x="672.4" y="373" width="6.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="675.40" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (735,767 samples, 0.01%)</title><rect x="832.4" y="293" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="835.39" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1,967,916 samples, 0.03%)</title><rect x="339.5" y="405" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="342.45" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (731,473 samples, 0.01%)</title><rect x="784.5" y="245" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="787.50" y="255.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (2,204,919 samples, 0.04%)</title><rect x="958.2" y="341" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="961.21" y="351.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (1,118,996 samples, 0.02%)</title><rect x="1044.3" y="389" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1047.26" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (633,677 samples, 0.01%)</title><rect x="789.3" y="261" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="792.32" y="271.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (658,554 samples, 0.01%)</title><rect x="754.7" y="85" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="757.70" y="95.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (140,597,340 samples, 2.34%)</title><rect x="1064.8" y="389" width="27.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1067.78" y="399.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (712,313 samples, 0.01%)</title><rect x="500.1" y="389" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="503.05" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (9,275,118 samples, 0.15%)</title><rect x="485.9" y="405" width="1.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="488.89" y="415.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,366,075 samples, 0.02%)</title><rect x="1045.8" y="389" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1048.84" y="399.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,364,765 samples, 0.02%)</title><rect x="791.9" y="309" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="794.93" y="319.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (737,902 samples, 0.01%)</title><rect x="501.2" y="373" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="504.16" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (628,612 samples, 0.01%)</title><rect x="761.3" y="133" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="764.26" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5,332,157 samples, 0.09%)</title><rect x="796.4" y="277" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="799.41" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (735,692 samples, 0.01%)</title><rect x="385.8" y="437" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="388.75" y="447.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (7,048,906 samples, 0.12%)</title><rect x="12.5" y="661" width="1.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="15.53" y="671.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2,833,542 samples, 0.05%)</title><rect x="1150.7" y="453" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1153.68" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (674,779 samples, 0.01%)</title><rect x="1171.8" y="357" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1174.78" y="367.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (736,988 samples, 0.01%)</title><rect x="1173.9" y="501" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1176.86" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (228,589,024 samples, 3.80%)</title><rect x="944.4" y="373" width="44.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="947.40" y="383.5" >__gn..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (731,041 samples, 0.01%)</title><rect x="747.6" y="85" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="750.61" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (4,268,798 samples, 0.07%)</title><rect x="502.1" y="389" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="505.05" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (17,411,674 samples, 0.29%)</title><rect x="509.9" y="421" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="512.93" y="431.5" ></text>
</g>
<g >
<title>[tests] (2,908,316 samples, 0.05%)</title><rect x="432.5" y="453" width="0.6" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="435.50" y="463.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (736,872 samples, 0.01%)</title><rect x="994.5" y="357" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="997.49" y="367.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (2,696,270 samples, 0.04%)</title><rect x="695.2" y="373" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="698.19" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5,877,796 samples, 0.10%)</title><rect x="799.5" y="293" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="802.49" y="303.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,846,568 samples, 0.05%)</title><rect x="704.4" y="373" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="707.43" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (736,867 samples, 0.01%)</title><rect x="1083.4" y="357" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1086.40" y="367.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (2,051,748 samples, 0.03%)</title><rect x="1012.7" y="373" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1015.70" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (6,430,876 samples, 0.11%)</title><rect x="476.5" y="421" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="479.50" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt; (2,087,263 samples, 0.03%)</title><rect x="789.7" y="261" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="792.68" y="271.5" ></text>
</g>
<g >
<title>operator new (735,238 samples, 0.01%)</title><rect x="457.5" y="485" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="460.53" y="495.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,101,730 samples, 0.03%)</title><rect x="879.7" y="341" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="882.67" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,286,165 samples, 0.04%)</title><rect x="458.2" y="469" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="461.21" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,307,748 samples, 0.02%)</title><rect x="749.0" y="117" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="751.96" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,874,161 samples, 0.05%)</title><rect x="810.9" y="293" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="813.85" y="303.5" ></text>
</g>
<g >
<title>__asan::asan_delete (736,413 samples, 0.01%)</title><rect x="237.8" y="693" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="240.84" y="703.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (3,054,214,911 samples, 50.82%)</title><rect x="494.9" y="485" width="599.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="497.93" y="495.5" >std::sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_..</text>
</g>
<g >
<title>std::move_backward&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (3,400,124 samples, 0.06%)</title><rect x="503.8" y="421" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="506.80" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr (630,742 samples, 0.01%)</title><rect x="1168.7" y="469" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1171.71" y="479.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (418,116,239 samples, 6.96%)</title><rect x="743.8" y="373" width="82.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="746.84" y="383.5" >std::__in..</text>
</g>
<g >
<title>std::operator&lt; (659,416 samples, 0.01%)</title><rect x="754.8" y="85" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="757.83" y="95.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (2,699,072 samples, 0.04%)</title><rect x="1169.6" y="469" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1172.65" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (5,098,409 samples, 0.08%)</title><rect x="793.4" y="261" width="1.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="796.44" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (1,281,738 samples, 0.02%)</title><rect x="781.0" y="197" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="784.03" y="207.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2,189,610 samples, 0.04%)</title><rect x="740.8" y="421" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="743.77" y="431.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,689,678 samples, 0.04%)</title><rect x="538.8" y="389" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="541.77" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (736,651 samples, 0.01%)</title><rect x="495.5" y="405" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="498.46" y="415.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (10,438,006 samples, 0.17%)</title><rect x="780.8" y="229" width="2.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="783.76" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (18,687,175 samples, 0.31%)</title><rect x="631.4" y="389" width="3.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="634.36" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (735,845 samples, 0.01%)</title><rect x="746.9" y="85" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="749.94" y="95.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (3,494,452 samples, 0.06%)</title><rect x="1043.0" y="389" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1046.01" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,139,790 samples, 0.04%)</title><rect x="503.4" y="373" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="506.38" y="383.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (1,374,980 samples, 0.02%)</title><rect x="876.8" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="879.79" y="351.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (2,058,327 samples, 0.03%)</title><rect x="242.4" y="693" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="245.45" y="703.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (1,317,915 samples, 0.02%)</title><rect x="755.0" y="53" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="757.96" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (648,581 samples, 0.01%)</title><rect x="828.3" y="325" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="831.27" y="335.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (6,249,285 samples, 0.10%)</title><rect x="546.6" y="373" width="1.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="549.64" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (729,930 samples, 0.01%)</title><rect x="780.6" y="149" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="783.62" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (649,689 samples, 0.01%)</title><rect x="757.4" y="117" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="760.44" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (683,038 samples, 0.01%)</title><rect x="1172.8" y="389" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1175.85" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (625,002 samples, 0.01%)</title><rect x="762.9" y="117" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="765.92" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_4 (1,819,282 samples, 0.03%)</title><rect x="328.2" y="709" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="331.20" y="719.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (134,510,134 samples, 2.24%)</title><rect x="57.1" y="677" width="26.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="60.05" y="687.5" >_..</text>
</g>
<g >
<title>__tls_get_addr (1,113,123 samples, 0.02%)</title><rect x="766.5" y="149" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="769.50" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3,065,760 samples, 0.05%)</title><rect x="772.6" y="165" width="0.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="775.57" y="175.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (4,256,497 samples, 0.07%)</title><rect x="679.1" y="373" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="682.15" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4,785,366 samples, 0.08%)</title><rect x="748.4" y="133" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="751.42" y="143.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (972,215 samples, 0.02%)</title><rect x="787.7" y="213" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="790.74" y="223.5" ></text>
</g>
<g >
<title>dl_main (7,916,571 samples, 0.13%)</title><rect x="257.4" y="677" width="1.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="260.42" y="687.5" ></text>
</g>
<g >
<title>__sched_yield (1,360,728 samples, 0.02%)</title><rect x="1188.6" y="709" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1191.64" y="719.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (5,542,877 samples, 0.09%)</title><rect x="356.0" y="421" width="1.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="358.98" y="431.5" ></text>
</g>
<g >
<title>[unknown] (12,126,456 samples, 0.20%)</title><rect x="10.1" y="677" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.14" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3,386,936 samples, 0.06%)</title><rect x="755.0" y="69" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="757.96" y="79.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (2,835,321 samples, 0.05%)</title><rect x="803.0" y="325" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="805.98" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (736,646 samples, 0.01%)</title><rect x="1106.8" y="453" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1109.76" y="463.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (7,928,386 samples, 0.13%)</title><rect x="784.5" y="277" width="1.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="787.50" y="287.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,120,618 samples, 0.04%)</title><rect x="402.6" y="405" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="405.62" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,685,211 samples, 0.04%)</title><rect x="751.0" y="101" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="753.98" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (687,638 samples, 0.01%)</title><rect x="798.1" y="341" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="801.14" y="351.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (678,034 samples, 0.01%)</title><rect x="1172.7" y="405" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1175.71" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (721,291 samples, 0.01%)</title><rect x="749.5" y="117" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="752.50" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1,473,383 samples, 0.02%)</title><rect x="1154.9" y="405" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1157.95" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,233,098 samples, 0.07%)</title><rect x="1047.0" y="405" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1050.05" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (736,868 samples, 0.01%)</title><rect x="354.1" y="437" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="357.13" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (5,480,864 samples, 0.09%)</title><rect x="450.6" y="485" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="453.59" y="495.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (688,859 samples, 0.01%)</title><rect x="748.2" y="101" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="751.15" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator&lt;=&gt;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1,394,799 samples, 0.02%)</title><rect x="935.1" y="357" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="938.06" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1,397,729 samples, 0.02%)</title><rect x="1144.0" y="421" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1146.96" y="431.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6,962,378 samples, 0.12%)</title><rect x="878.3" y="325" width="1.4" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="881.30" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (1,448,776 samples, 0.02%)</title><rect x="776.9" y="165" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="779.92" y="175.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (628,572 samples, 0.01%)</title><rect x="497.0" y="389" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="500.00" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (1,197,022 samples, 0.02%)</title><rect x="942.1" y="373" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="945.12" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (35,462,085 samples, 0.59%)</title><rect x="696.0" y="373" width="7.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="699.00" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::deallocate (631,858 samples, 0.01%)</title><rect x="1167.3" y="453" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1170.33" y="463.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (736,430 samples, 0.01%)</title><rect x="350.2" y="437" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="353.16" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (1,221,474 samples, 0.02%)</title><rect x="1167.9" y="501" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1170.95" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (3,329,309 samples, 0.06%)</title><rect x="475.9" y="421" width="0.6" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="478.85" y="431.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_val&gt; (12,159,126 samples, 0.20%)</title><rect x="754.3" y="117" width="2.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="757.28" y="127.5" ></text>
</g>
<g >
<title>std::array&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 10ul&gt;::array (679,015 samples, 0.01%)</title><rect x="328.6" y="453" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="331.55" y="463.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (611,090 samples, 0.01%)</title><rect x="1140.6" y="389" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1143.62" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,744,102 samples, 0.05%)</title><rect x="935.7" y="357" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="938.73" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (635,143 samples, 0.01%)</title><rect x="763.0" y="101" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="766.04" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (9,790,297 samples, 0.16%)</title><rect x="445.6" y="389" width="1.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="448.60" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (5,504,917 samples, 0.09%)</title><rect x="505.4" y="421" width="1.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="508.40" y="431.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (9,709,566 samples, 0.16%)</title><rect x="10.6" y="661" width="1.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="13.62" y="671.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (1,347,451 samples, 0.02%)</title><rect x="800.1" y="277" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="803.10" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,319,277 samples, 0.02%)</title><rect x="549.5" y="373" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="552.51" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,121,495 samples, 0.02%)</title><rect x="1173.5" y="437" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1176.50" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,132,463 samples, 0.04%)</title><rect x="1165.1" y="373" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1168.12" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (12,781,670 samples, 0.21%)</title><rect x="798.3" y="325" width="2.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="801.27" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,871,194 samples, 0.05%)</title><rect x="737.4" y="389" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="740.36" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (651,897 samples, 0.01%)</title><rect x="749.1" y="101" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="752.09" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,308,290 samples, 0.02%)</title><rect x="1091.5" y="373" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1094.49" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (2,130,982 samples, 0.04%)</title><rect x="730.1" y="389" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="733.10" y="399.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (672,724 samples, 0.01%)</title><rect x="264.2" y="709" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="267.24" y="719.5" ></text>
</g>
<g >
<title>[unknown] (5,990,209 samples, 0.10%)</title><rect x="255.9" y="677" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="258.91" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (973,818 samples, 0.02%)</title><rect x="760.6" y="149" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="763.63" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (630,693 samples, 0.01%)</title><rect x="746.5" y="101" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="749.55" y="111.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6,769,044 samples, 0.11%)</title><rect x="790.1" y="261" width="1.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="793.09" y="271.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (634,277 samples, 0.01%)</title><rect x="500.7" y="389" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="503.70" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (1,398,485 samples, 0.02%)</title><rect x="802.7" y="325" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="805.71" y="335.5" ></text>
</g>
<g >
<title>__tls_get_addr (1,415,324 samples, 0.02%)</title><rect x="854.9" y="309" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="857.92" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (633,180 samples, 0.01%)</title><rect x="744.4" y="341" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="747.39" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (719,578 samples, 0.01%)</title><rect x="936.5" y="309" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="939.54" y="319.5" ></text>
</g>
<g >
<title>operator delete (1,973,876 samples, 0.03%)</title><rect x="449.5" y="469" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="452.51" y="479.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (2,792,871 samples, 0.05%)</title><rect x="853.3" y="309" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="856.28" y="319.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (122,392,788 samples, 2.04%)</title><rect x="801.9" y="341" width="24.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="804.90" y="351.5" >s..</text>
</g>
<g >
<title>std::__is_constant_evaluated (2,846,448 samples, 0.05%)</title><rect x="721.1" y="341" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="724.11" y="351.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (674,745 samples, 0.01%)</title><rect x="1174.0" y="389" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1177.01" y="399.5" ></text>
</g>
<g >
<title>testing::TestSuite::~TestSuite (679,871 samples, 0.01%)</title><rect x="1178.2" y="581" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1181.18" y="591.5" ></text>
</g>
<g >
<title>[tests] (1,447,070 samples, 0.02%)</title><rect x="1125.6" y="421" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1128.59" y="431.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (5,615,694 samples, 0.09%)</title><rect x="583.6" y="405" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="586.61" y="415.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (662,677 samples, 0.01%)</title><rect x="264.4" y="709" width="0.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="267.37" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (971,414 samples, 0.02%)</title><rect x="765.4" y="133" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="768.44" y="143.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (4,969,275 samples, 0.08%)</title><rect x="800.8" y="325" width="1.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="803.78" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (736,263 samples, 0.01%)</title><rect x="939.3" y="357" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="942.26" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,045,284 samples, 0.03%)</title><rect x="601.1" y="389" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="604.09" y="399.5" ></text>
</g>
<g >
<title>[tests] (736,810 samples, 0.01%)</title><rect x="806.6" y="309" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="809.61" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (2,772,629 samples, 0.05%)</title><rect x="973.3" y="309" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="976.32" y="319.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (2,088,465 samples, 0.03%)</title><rect x="1075.1" y="357" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1078.14" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (8,949,690 samples, 0.15%)</title><rect x="352.4" y="437" width="1.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="355.37" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (730,485 samples, 0.01%)</title><rect x="755.2" y="53" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="758.22" y="63.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (5,441,839 samples, 0.09%)</title><rect x="754.6" y="101" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="757.56" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1,394,981 samples, 0.02%)</title><rect x="991.5" y="325" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="994.55" y="335.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (919,530 samples, 0.02%)</title><rect x="1174.8" y="677" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1177.83" y="687.5" ></text>
</g>
<g >
<title>std::__copy_move_backward_a&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (683,481 samples, 0.01%)</title><rect x="1169.6" y="421" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1172.65" y="431.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (736,378 samples, 0.01%)</title><rect x="886.5" y="357" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="889.54" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (973,957 samples, 0.02%)</title><rect x="938.1" y="389" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="941.14" y="399.5" ></text>
</g>
<g >
<title>[unknown] (651,089 samples, 0.01%)</title><rect x="746.4" y="101" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="749.42" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (6,312,786 samples, 0.11%)</title><rect x="1084.2" y="341" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1087.22" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (22,026,067 samples, 0.37%)</title><rect x="721.9" y="389" width="4.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="724.94" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (736,112 samples, 0.01%)</title><rect x="797.7" y="341" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="800.72" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,301,156 samples, 0.02%)</title><rect x="751.7" y="117" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="754.65" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (678,684 samples, 0.01%)</title><rect x="793.0" y="277" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="796.04" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (29,925,814 samples, 0.50%)</title><rect x="608.9" y="389" width="5.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="611.91" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (2,130,897 samples, 0.04%)</title><rect x="750.3" y="117" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="753.28" y="127.5" ></text>
</g>
<g >
<title>[tests] (651,231 samples, 0.01%)</title><rect x="796.8" y="261" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="799.83" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (9,657,401 samples, 0.16%)</title><rect x="1087.2" y="357" width="1.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1090.25" y="367.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (737,375 samples, 0.01%)</title><rect x="1147.1" y="405" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1150.14" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (212,294,124 samples, 3.53%)</title><rect x="1050.7" y="405" width="41.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1053.70" y="415.5" >__g..</text>
</g>
<g >
<title>__interceptor___tls_get_addr (658,000 samples, 0.01%)</title><rect x="797.5" y="309" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="800.46" y="319.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1,784,549 samples, 0.03%)</title><rect x="357.1" y="421" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="360.07" y="431.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (11,189,815 samples, 0.19%)</title><rect x="778.4" y="213" width="2.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="781.42" y="223.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,029,707 samples, 0.03%)</title><rect x="1169.2" y="501" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1172.25" y="511.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (1,201,170 samples, 0.02%)</title><rect x="785.6" y="197" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="788.58" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (2,766,744 samples, 0.05%)</title><rect x="759.2" y="165" width="0.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="762.19" y="175.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (702,316 samples, 0.01%)</title><rect x="878.2" y="341" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="881.17" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (10,921,114 samples, 0.18%)</title><rect x="570.4" y="357" width="2.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="573.39" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (656,778 samples, 0.01%)</title><rect x="741.7" y="421" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="744.71" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (5,631,369 samples, 0.09%)</title><rect x="1144.2" y="437" width="1.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1147.24" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (658,706 samples, 0.01%)</title><rect x="753.4" y="85" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="756.36" y="95.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (3,573,662 samples, 0.06%)</title><rect x="726.3" y="389" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="729.27" y="399.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (2,004,497 samples, 0.03%)</title><rect x="1060.9" y="389" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1063.94" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (658,593 samples, 0.01%)</title><rect x="790.8" y="229" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="793.76" y="239.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (635,102 samples, 0.01%)</title><rect x="782.7" y="213" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="785.68" y="223.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (722,452 samples, 0.01%)</title><rect x="895.3" y="341" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="898.27" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (10,063,825 samples, 0.17%)</title><rect x="451.7" y="485" width="1.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="454.66" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,391,308 samples, 0.02%)</title><rect x="753.5" y="101" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="756.49" y="111.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (603,463 samples, 0.01%)</title><rect x="772.4" y="149" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="775.45" y="159.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Val_less_iter&gt; (2,015,591 samples, 0.03%)</title><rect x="1169.8" y="437" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1172.78" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,327,835 samples, 0.02%)</title><rect x="338.8" y="421" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="341.79" y="431.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (736,692 samples, 0.01%)</title><rect x="783.0" y="165" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="785.95" y="175.5" ></text>
</g>
<g >
<title>std::operator&lt; (1,384,679 samples, 0.02%)</title><rect x="825.5" y="325" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="828.52" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (19,298,136 samples, 0.32%)</title><rect x="337.6" y="453" width="3.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="340.63" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1,365,405 samples, 0.02%)</title><rect x="986.9" y="341" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="989.88" y="351.5" ></text>
</g>
<g >
<title>__tls_get_addr (3,522,789 samples, 0.06%)</title><rect x="1092.7" y="405" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1095.66" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (634,717 samples, 0.01%)</title><rect x="767.9" y="117" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="770.95" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (625,551 samples, 0.01%)</title><rect x="794.0" y="245" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="797.03" y="255.5" ></text>
</g>
<g >
<title>testing::UnitTest::Run (4,309,024,300 samples, 71.70%)</title><rect x="328.6" y="661" width="846.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="331.55" y="671.5" >testing::UnitTest::Run</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (23,294,818 samples, 0.39%)</title><rect x="443.5" y="405" width="4.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="446.50" y="415.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::operator[][abi:cxx11] (676,602 samples, 0.01%)</title><rect x="1167.5" y="501" width="0.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1170.45" y="511.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (2,769,604 samples, 0.05%)</title><rect x="391.8" y="421" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="394.81" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (10,449,337 samples, 0.17%)</title><rect x="795.4" y="309" width="2.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="798.41" y="319.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (670,442 samples, 0.01%)</title><rect x="501.9" y="357" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="504.92" y="367.5" ></text>
</g>
<g >
<title>std::__unguarded_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,205,613,457 samples, 20.06%)</title><rect x="504.5" y="437" width="236.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="507.47" y="447.5" >std::__unguarded_insertion_sort..</text>
</g>
<g >
<title>__tls_get_addr (3,789,014 samples, 0.06%)</title><rect x="990.0" y="373" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="992.98" y="383.5" ></text>
</g>
<g >
<title>std::array&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 10ul&gt;::~array (47,254,731 samples, 0.79%)</title><rect x="367.8" y="469" width="9.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="370.80" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; (1,160,322 samples, 0.02%)</title><rect x="497.1" y="389" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="500.12" y="399.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1,351,459 samples, 0.02%)</title><rect x="752.8" y="37" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="755.83" y="47.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,387,540 samples, 0.02%)</title><rect x="340.9" y="373" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="343.91" y="383.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (736,692 samples, 0.01%)</title><rect x="783.0" y="229" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="785.95" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (37,943,422 samples, 0.63%)</title><rect x="1132.0" y="421" width="7.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1134.96" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (737,139 samples, 0.01%)</title><rect x="795.0" y="261" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="798.04" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (650,891 samples, 0.01%)</title><rect x="758.2" y="101" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="761.23" y="111.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (1,391,308 samples, 0.02%)</title><rect x="753.5" y="69" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="756.49" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (20,504,932 samples, 0.34%)</title><rect x="1139.7" y="421" width="4.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1142.70" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr (736,227 samples, 0.01%)</title><rect x="882.4" y="325" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="885.39" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (675,550 samples, 0.01%)</title><rect x="1170.4" y="357" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1173.45" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (632,688 samples, 0.01%)</title><rect x="762.2" y="101" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="765.21" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (29,955,849 samples, 0.50%)</title><rect x="471.9" y="437" width="5.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="474.89" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (8,608,232 samples, 0.14%)</title><rect x="436.6" y="453" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="439.56" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,122,401 samples, 0.02%)</title><rect x="768.8" y="133" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="771.80" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (670,442 samples, 0.01%)</title><rect x="501.9" y="389" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="504.92" y="399.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4,626,341 samples, 0.08%)</title><rect x="936.3" y="341" width="0.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="939.27" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (9,771,235 samples, 0.16%)</title><rect x="1083.5" y="357" width="2.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1086.54" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (721,291 samples, 0.01%)</title><rect x="749.5" y="101" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="752.50" y="111.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (676,973 samples, 0.01%)</title><rect x="741.8" y="405" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="744.84" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (21,248,062 samples, 0.35%)</title><rect x="337.2" y="469" width="4.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="340.25" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (2,193,838 samples, 0.04%)</title><rect x="625.1" y="373" width="0.5" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="628.15" y="383.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (683,665 samples, 0.01%)</title><rect x="774.3" y="165" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="777.29" y="175.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (671,415 samples, 0.01%)</title><rect x="43.8" y="661" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="46.77" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (3,561,439 samples, 0.06%)</title><rect x="1047.9" y="405" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1050.88" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1,472,629 samples, 0.02%)</title><rect x="1177.9" y="709" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1180.89" y="719.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_val&gt; (674,779 samples, 0.01%)</title><rect x="1171.8" y="373" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1174.78" y="383.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (659,469 samples, 0.01%)</title><rect x="748.3" y="101" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="751.29" y="111.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,173,056 samples, 0.07%)</title><rect x="1016.8" y="357" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1019.75" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (632,598 samples, 0.01%)</title><rect x="761.7" y="133" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="764.70" y="143.5" ></text>
</g>
<g >
<title>std::__partial_sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (8,815,893 samples, 0.15%)</title><rect x="1170.2" y="437" width="1.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1173.18" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (631,032 samples, 0.01%)</title><rect x="762.7" y="85" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="765.67" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (2,094,949 samples, 0.03%)</title><rect x="835.7" y="341" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="838.68" y="351.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (626,382 samples, 0.01%)</title><rect x="440.2" y="453" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="443.19" y="463.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (1,472,005 samples, 0.02%)</title><rect x="535.3" y="389" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="538.31" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (632,383 samples, 0.01%)</title><rect x="794.4" y="261" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="797.44" y="271.5" ></text>
</g>
<g >
<title>__tls_get_addr (1,374,937 samples, 0.02%)</title><rect x="393.3" y="421" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="396.31" y="431.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (657,427 samples, 0.01%)</title><rect x="861.0" y="293" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="864.02" y="303.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (654,338 samples, 0.01%)</title><rect x="783.1" y="229" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="786.10" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (4,863,940 samples, 0.08%)</title><rect x="977.7" y="325" width="1.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="980.72" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,605,512 samples, 0.03%)</title><rect x="770.0" y="85" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="773.03" y="95.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (661,284 samples, 0.01%)</title><rect x="757.2" y="69" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="760.18" y="79.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (1,439,698 samples, 0.02%)</title><rect x="833.8" y="341" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="836.76" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (2,849,550 samples, 0.05%)</title><rect x="608.4" y="389" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="611.35" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt; (2,076,337 samples, 0.03%)</title><rect x="828.7" y="325" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="831.66" y="335.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (1,347,451 samples, 0.02%)</title><rect x="800.1" y="261" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="803.10" y="271.5" ></text>
</g>
<g >
<title>_dl_relocate_object (7,916,571 samples, 0.13%)</title><rect x="257.4" y="661" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="260.42" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (721,906 samples, 0.01%)</title><rect x="759.0" y="117" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="762.04" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (672,557 samples, 0.01%)</title><rect x="1170.0" y="389" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.05" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (1,223,633 samples, 0.02%)</title><rect x="494.9" y="453" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="497.93" y="463.5" ></text>
</g>
<g >
<title>[tests] (1,602,267 samples, 0.03%)</title><rect x="599.7" y="389" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="602.70" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (661,845 samples, 0.01%)</title><rect x="1094.6" y="469" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1097.64" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (972,252 samples, 0.02%)</title><rect x="498.8" y="357" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="501.79" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (736,808 samples, 0.01%)</title><rect x="791.7" y="309" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="794.69" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (736,490 samples, 0.01%)</title><rect x="441.7" y="437" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="444.67" y="447.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (1,466,291 samples, 0.02%)</title><rect x="830.5" y="277" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="833.45" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (649,116 samples, 0.01%)</title><rect x="799.4" y="293" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="802.36" y="303.5" ></text>
</g>
<g >
<title>testing::internal::FlagToEnvVar (920,595 samples, 0.02%)</title><rect x="1174.7" y="645" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1177.65" y="655.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1,341,988 samples, 0.02%)</title><rect x="824.2" y="293" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="827.16" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_less_iter::operator (11,322,392 samples, 0.19%)</title><rect x="496.9" y="405" width="2.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="499.85" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1,472,305 samples, 0.02%)</title><rect x="801.5" y="277" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="804.47" y="287.5" ></text>
</g>
<g >
<title>[unknown] (671,415 samples, 0.01%)</title><rect x="43.8" y="645" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="46.77" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (737,332 samples, 0.01%)</title><rect x="1046.0" y="357" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1048.97" y="367.5" ></text>
</g>
<g >
<title>testing::Test::Run (4,307,633,721 samples, 71.68%)</title><rect x="328.6" y="565" width="845.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="331.55" y="575.5" >testing::Test::Run</text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (1,473,135 samples, 0.02%)</title><rect x="791.1" y="245" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="794.13" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (736,692 samples, 0.01%)</title><rect x="783.0" y="197" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="785.95" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4,676,044 samples, 0.08%)</title><rect x="755.8" y="101" width="0.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="758.75" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1,351,645 samples, 0.02%)</title><rect x="1170.8" y="341" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1173.84" y="351.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (997,916,301 samples, 16.61%)</title><rect x="742.1" y="405" width="195.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="745.10" y="415.5" >std::__introsort_loop&lt;__g..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,311,057 samples, 0.02%)</title><rect x="756.4" y="69" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="759.41" y="79.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (8,463,234 samples, 0.14%)</title><rect x="889.8" y="357" width="1.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="892.85" y="367.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,141,600 samples, 0.02%)</title><rect x="774.9" y="213" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="777.93" y="223.5" ></text>
</g>
<g >
<title>std::operator&lt; (713,778 samples, 0.01%)</title><rect x="750.8" y="101" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="753.84" y="111.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,794,082 samples, 0.05%)</title><rect x="853.8" y="309" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="856.83" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (4,214,787 samples, 0.07%)</title><rect x="733.3" y="357" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="736.27" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::replace (1,292,785 samples, 0.02%)</title><rect x="1169.2" y="469" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1172.25" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (14,519,009 samples, 0.24%)</title><rect x="363.1" y="421" width="2.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="366.15" y="431.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (76,754,380 samples, 1.28%)</title><rect x="744.7" y="213" width="15.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.66" y="223.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (736,934 samples, 0.01%)</title><rect x="736.8" y="341" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="739.82" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,983,796 samples, 0.08%)</title><rect x="843.7" y="325" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="846.73" y="335.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (7,123,761 samples, 0.12%)</title><rect x="783.1" y="245" width="1.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="786.10" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (2,802,131 samples, 0.05%)</title><rect x="826.6" y="357" width="0.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="829.62" y="367.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (10,259,842 samples, 0.17%)</title><rect x="939.1" y="389" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="942.13" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (3,217,016 samples, 0.05%)</title><rect x="1179.4" y="709" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1182.43" y="719.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (632,770 samples, 0.01%)</title><rect x="794.8" y="261" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="797.82" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (662,350 samples, 0.01%)</title><rect x="792.9" y="277" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="795.91" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (5,152,892 samples, 0.09%)</title><rect x="769.3" y="133" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="772.33" y="143.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (736,558 samples, 0.01%)</title><rect x="1126.3" y="421" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1129.28" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (643,433 samples, 0.01%)</title><rect x="499.5" y="405" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="502.46" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (655,054 samples, 0.01%)</title><rect x="827.2" y="357" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="830.17" y="367.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (2,000,743 samples, 0.03%)</title><rect x="1045.7" y="405" width="0.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1048.72" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,609,241 samples, 0.03%)</title><rect x="760.1" y="133" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="763.07" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (3,439,081 samples, 0.06%)</title><rect x="581.6" y="373" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="584.58" y="383.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (3,054,326 samples, 0.05%)</title><rect x="520.0" y="405" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="523.03" y="415.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (655,676 samples, 0.01%)</title><rect x="458.1" y="469" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="461.08" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (6,926,968 samples, 0.12%)</title><rect x="832.0" y="309" width="1.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="834.99" y="319.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,209,874 samples, 0.04%)</title><rect x="1113.6" y="437" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1116.64" y="447.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (736,599 samples, 0.01%)</title><rect x="10.0" y="709" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>[tests] (1,305,292 samples, 0.02%)</title><rect x="1102.8" y="453" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1105.79" y="463.5" ></text>
</g>
<g >
<title>std::operator&lt; (634,549 samples, 0.01%)</title><rect x="775.9" y="181" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="778.87" y="191.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (683,038 samples, 0.01%)</title><rect x="1172.8" y="421" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1175.85" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (56,700,982 samples, 0.94%)</title><rect x="1155.2" y="405" width="11.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1158.24" y="415.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (17,767,419 samples, 0.30%)</title><rect x="433.1" y="453" width="3.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="436.07" y="463.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (10,583,973 samples, 0.18%)</title><rect x="433.5" y="437" width="2.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="436.50" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (11,062,735 samples, 0.18%)</title><rect x="975.5" y="325" width="2.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="978.55" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (683,328 samples, 0.01%)</title><rect x="797.9" y="341" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="800.86" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (95,323,584 samples, 1.59%)</title><rect x="661.3" y="389" width="18.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="664.26" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,296,246 samples, 0.02%)</title><rect x="1094.4" y="405" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1097.39" y="415.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (669,904 samples, 0.01%)</title><rect x="416.5" y="373" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="419.55" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (731,473 samples, 0.01%)</title><rect x="784.5" y="229" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="787.50" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (43,862,840 samples, 0.73%)</title><rect x="729.3" y="405" width="8.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="732.31" y="415.5" ></text>
</g>
<g >
<title>[tests] (1,363,014 samples, 0.02%)</title><rect x="996.7" y="389" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="999.74" y="399.5" ></text>
</g>
<g >
<title>std::move&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (8,478,190 samples, 0.14%)</title><rect x="738.1" y="405" width="1.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="741.07" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (655,851 samples, 0.01%)</title><rect x="749.0" y="101" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="751.96" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,441,773 samples, 0.02%)</title><rect x="503.9" y="325" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="506.95" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (684,091 samples, 0.01%)</title><rect x="754.2" y="101" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="757.15" y="111.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (2,068,491 samples, 0.03%)</title><rect x="736.4" y="325" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="739.41" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (3,447,892 samples, 0.06%)</title><rect x="1148.6" y="437" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1151.64" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (5,499,649 samples, 0.09%)</title><rect x="327.1" y="709" width="1.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="330.12" y="719.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (51,390,887 samples, 0.86%)</title><rect x="430.4" y="469" width="10.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="433.36" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (678,854 samples, 0.01%)</title><rect x="879.5" y="309" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="882.54" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (29,864,635 samples, 0.50%)</title><rect x="407.6" y="405" width="5.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="410.55" y="415.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (18,486,909 samples, 0.31%)</title><rect x="798.3" y="341" width="3.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="801.27" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (656,711 samples, 0.01%)</title><rect x="423.0" y="421" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="425.97" y="431.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::Iterator::operator* (1,886,733 samples, 0.03%)</title><rect x="377.8" y="485" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="380.77" y="495.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (733,193 samples, 0.01%)</title><rect x="1165.0" y="357" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1167.97" y="367.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (1,447,620 samples, 0.02%)</title><rect x="367.4" y="453" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="370.37" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (1,460,037 samples, 0.02%)</title><rect x="778.5" y="181" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="781.51" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (1,223,534 samples, 0.02%)</title><rect x="368.6" y="453" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="371.62" y="463.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (634,106 samples, 0.01%)</title><rect x="762.8" y="133" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="765.79" y="143.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (3,606,218 samples, 0.06%)</title><rect x="448.7" y="469" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="451.65" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; (730,247 samples, 0.01%)</title><rect x="495.6" y="405" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="498.61" y="415.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (14,274,154 samples, 0.24%)</title><rect x="1170.2" y="469" width="2.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1173.18" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (655,054 samples, 0.01%)</title><rect x="827.2" y="341" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="830.17" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2,573,471 samples, 0.04%)</title><rect x="785.3" y="213" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="788.31" y="223.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (632,633 samples, 0.01%)</title><rect x="614.1" y="357" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="617.12" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (656,050 samples, 0.01%)</title><rect x="843.1" y="325" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="846.07" y="335.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (4,138,365 samples, 0.07%)</title><rect x="1174.7" y="709" width="0.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1177.65" y="719.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,544,642,080 samples, 25.70%)</title><rect x="741.7" y="437" width="303.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="744.71" y="447.5" >std::__introsort_loop&lt;__gnu_cxx::__norma..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (3,383,383 samples, 0.06%)</title><rect x="727.0" y="389" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="729.97" y="399.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (2,033,572 samples, 0.03%)</title><rect x="1131.6" y="405" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1134.56" y="415.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (3,354,828 samples, 0.06%)</title><rect x="513.3" y="421" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="516.35" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (628,743 samples, 0.01%)</title><rect x="1045.8" y="373" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1048.84" y="383.5" ></text>
</g>
<g >
<title>std::array&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 10ul&gt;::array (133,618,182 samples, 2.22%)</title><rect x="341.4" y="469" width="26.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="344.42" y="479.5" >s..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (674,745 samples, 0.01%)</title><rect x="1174.0" y="357" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1177.01" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (3,414,302 samples, 0.06%)</title><rect x="468.4" y="437" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="471.43" y="447.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (2,601,672 samples, 0.04%)</title><rect x="395.1" y="405" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="398.09" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (8,462,445 samples, 0.14%)</title><rect x="836.1" y="341" width="1.7" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="839.10" y="351.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (295,179,508 samples, 4.91%)</title><rect x="880.1" y="389" width="57.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="883.08" y="399.5" >std::_..</text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (3,550,091 samples, 0.06%)</title><rect x="991.1" y="373" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="994.12" y="383.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (4,363,088 samples, 0.07%)</title><rect x="1146.9" y="421" width="0.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1149.86" y="431.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (21,103,072 samples, 0.35%)</title><rect x="881.6" y="373" width="4.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="884.59" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (736,145 samples, 0.01%)</title><rect x="782.8" y="229" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="785.81" y="239.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9,759,155 samples, 0.16%)</title><rect x="831.4" y="325" width="1.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="834.43" y="335.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (4,626,341 samples, 0.08%)</title><rect x="936.3" y="357" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="939.27" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (9,676,883 samples, 0.16%)</title><rect x="792.5" y="293" width="1.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="795.54" y="303.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::Bucket::~Bucket (47,980,352 samples, 0.80%)</title><rect x="367.7" y="485" width="9.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="370.65" y="495.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (658,734 samples, 0.01%)</title><rect x="634.9" y="373" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="637.90" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1,166,537 samples, 0.02%)</title><rect x="820.1" y="277" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="823.06" y="287.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,673,339 samples, 0.04%)</title><rect x="547.9" y="373" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="550.86" y="383.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,667,637 samples, 0.04%)</title><rect x="1066.6" y="373" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1069.56" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (3,891,865 samples, 0.06%)</title><rect x="764.9" y="149" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="767.87" y="159.5" ></text>
</g>
<g >
<title>std::operator&lt; (15,328,129 samples, 0.26%)</title><rect x="1013.2" y="373" width="3.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1016.23" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (659,510 samples, 0.01%)</title><rect x="797.6" y="277" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="800.59" y="287.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (727,204 samples, 0.01%)</title><rect x="407.4" y="357" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="410.41" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (8,342,403 samples, 0.14%)</title><rect x="867.1" y="293" width="1.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="870.15" y="303.5" ></text>
</g>
<g >
<title>[tests] (661,605 samples, 0.01%)</title><rect x="810.6" y="293" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="813.59" y="303.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,685,648 samples, 0.04%)</title><rect x="907.2" y="325" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="910.22" y="335.5" ></text>
</g>
<g >
<title>[tests] (737,141 samples, 0.01%)</title><rect x="826.1" y="357" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="829.08" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (653,835 samples, 0.01%)</title><rect x="746.2" y="101" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="749.16" y="111.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (211,556,934 samples, 3.52%)</title><rect x="744.5" y="293" width="41.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.51" y="303.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (737,360 samples, 0.01%)</title><rect x="784.4" y="197" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="787.35" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,385,939 samples, 0.02%)</title><rect x="500.2" y="389" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="503.19" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1,363,116 samples, 0.02%)</title><rect x="832.5" y="293" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="835.53" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (1,879,283 samples, 0.03%)</title><rect x="496.5" y="405" width="0.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="499.48" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (19,744,242 samples, 0.33%)</title><rect x="1161.1" y="357" width="3.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1164.10" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (660,775 samples, 0.01%)</title><rect x="1042.0" y="357" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1044.97" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (662,137 samples, 0.01%)</title><rect x="939.8" y="309" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="942.83" y="319.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (736,692 samples, 0.01%)</title><rect x="783.0" y="181" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="785.95" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (737,139 samples, 0.01%)</title><rect x="795.0" y="277" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="798.04" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (657,270 samples, 0.01%)</title><rect x="1153.9" y="421" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1156.92" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (683,481 samples, 0.01%)</title><rect x="1169.6" y="357" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1172.65" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1,931,034 samples, 0.03%)</title><rect x="988.3" y="341" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="991.26" y="351.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (1,289,588 samples, 0.02%)</title><rect x="10.4" y="661" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="13.37" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (737,127 samples, 0.01%)</title><rect x="385.2" y="437" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="388.20" y="447.5" ></text>
</g>
<g >
<title>__tls_get_addr (5,614,071 samples, 0.09%)</title><rect x="877.1" y="341" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="880.06" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (1,364,220 samples, 0.02%)</title><rect x="587.2" y="405" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="590.19" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1,371,364 samples, 0.02%)</title><rect x="721.7" y="373" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="724.67" y="383.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,551,049 samples, 0.04%)</title><rect x="351.6" y="437" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="354.58" y="447.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (5,696,955 samples, 0.09%)</title><rect x="421.4" y="405" width="1.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="424.36" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (729,930 samples, 0.01%)</title><rect x="780.6" y="165" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="783.62" y="175.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (2,766,744 samples, 0.05%)</title><rect x="759.2" y="181" width="0.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="762.19" y="191.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (1,382,887 samples, 0.02%)</title><rect x="1092.4" y="405" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1095.38" y="415.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,779,709 samples, 0.05%)</title><rect x="854.4" y="309" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="857.38" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (1,332,916 samples, 0.02%)</title><rect x="744.1" y="341" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="747.13" y="351.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (634,205 samples, 0.01%)</title><rect x="884.8" y="277" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="887.77" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (11,588,379 samples, 0.19%)</title><rect x="1056.8" y="389" width="2.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1059.79" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (42,711,097 samples, 0.71%)</title><rect x="318.7" y="709" width="8.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="321.73" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (6,365,793 samples, 0.11%)</title><rect x="884.5" y="325" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="887.48" y="335.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (2,695,219 samples, 0.04%)</title><rect x="265.1" y="709" width="0.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="268.15" y="719.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredListTests_conversion2StringOperator_expectedAllTextsConcatened_Test::TestBody (679,015 samples, 0.01%)</title><rect x="328.6" y="517" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="331.55" y="527.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::~UnitTestImpl (679,871 samples, 0.01%)</title><rect x="1178.2" y="677" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1181.18" y="687.5" ></text>
</g>
<g >
<title>std::__sort_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (6,771,131 samples, 0.11%)</title><rect x="1170.6" y="421" width="1.3" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1173.58" y="431.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (737,125 samples, 0.01%)</title><rect x="366.9" y="437" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="369.94" y="447.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (736,416 samples, 0.01%)</title><rect x="630.0" y="389" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="633.00" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (6,283,524 samples, 0.10%)</title><rect x="878.3" y="309" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="881.30" y="319.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1,305,056 samples, 0.02%)</title><rect x="1131.7" y="389" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1134.70" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,678,774 samples, 0.04%)</title><rect x="411.0" y="389" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="413.99" y="399.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6,365,793 samples, 0.11%)</title><rect x="884.5" y="341" width="1.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="887.48" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (2,837,008 samples, 0.05%)</title><rect x="987.7" y="341" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="990.70" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,861,725 samples, 0.05%)</title><rect x="941.6" y="373" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="944.56" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator&lt;=&gt;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (723,695 samples, 0.01%)</title><rect x="938.9" y="389" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="941.85" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1,978,259 samples, 0.03%)</title><rect x="1148.3" y="437" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1151.25" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (736,145 samples, 0.01%)</title><rect x="785.9" y="245" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="788.91" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4,973,408 samples, 0.08%)</title><rect x="435.6" y="437" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="438.58" y="447.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (736,651 samples, 0.01%)</title><rect x="600.9" y="389" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="603.94" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,611,769 samples, 0.09%)</title><rect x="895.4" y="341" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="898.41" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,440,106 samples, 0.02%)</title><rect x="1100.4" y="469" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1103.40" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (552,689 samples, 0.01%)</title><rect x="796.2" y="293" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="799.21" y="303.5" ></text>
</g>
<g >
<title>__tls_get_addr (681,601 samples, 0.01%)</title><rect x="1171.1" y="373" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1174.11" y="383.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (658,761 samples, 0.01%)</title><rect x="759.5" y="101" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="762.46" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (635,330 samples, 0.01%)</title><rect x="769.2" y="133" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="772.21" y="143.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (737,249 samples, 0.01%)</title><rect x="794.2" y="245" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="797.15" y="255.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (2,044,762 samples, 0.03%)</title><rect x="1170.2" y="389" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1173.18" y="399.5" ></text>
</g>
<g >
<title>__lsan::ScanRangeForPointers (10,720,525 samples, 0.18%)</title><rect x="1175.8" y="709" width="2.1" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1178.79" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (11,841,280 samples, 0.20%)</title><rect x="567.8" y="357" width="2.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="570.80" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (974,630 samples, 0.02%)</title><rect x="779.3" y="149" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="782.28" y="159.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (4,656,995 samples, 0.08%)</title><rect x="620.2" y="341" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="623.20" y="351.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (668,344 samples, 0.01%)</title><rect x="1169.8" y="405" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1172.78" y="415.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (736,491 samples, 0.01%)</title><rect x="994.2" y="373" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="997.20" y="383.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (719,911 samples, 0.01%)</title><rect x="968.2" y="325" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="971.24" y="335.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,395,580 samples, 0.02%)</title><rect x="463.1" y="453" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="466.15" y="463.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,039,004 samples, 0.03%)</title><rect x="1044.6" y="389" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1047.61" y="399.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (8,596,598 samples, 0.14%)</title><rect x="782.8" y="261" width="1.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="785.81" y="271.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,935,086 samples, 0.03%)</title><rect x="774.6" y="165" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="777.55" y="175.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I__ZN7testing15AssertionResultC2ERKS0_ (920,595 samples, 0.02%)</title><rect x="1174.7" y="693" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1177.65" y="703.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (13,384,021 samples, 0.22%)</title><rect x="774.9" y="229" width="2.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="777.93" y="239.5" ></text>
</g>
<g >
<title>testing::TestSuite::Run (4,308,101,970 samples, 71.69%)</title><rect x="328.6" y="597" width="845.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="331.55" y="607.5" >testing::TestSuite::Run</text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,291,417 samples, 0.09%)</title><rect x="342.1" y="453" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="345.09" y="463.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::Bucket::Bucket (679,015 samples, 0.01%)</title><rect x="328.6" y="469" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="331.55" y="479.5" ></text>
</g>
<g >
<title>std::array&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 10ul&gt;::operator[] (2,095,412 samples, 0.03%)</title><rect x="1168.8" y="501" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1171.84" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1,373,022 samples, 0.02%)</title><rect x="1168.2" y="501" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1171.19" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (3,550,091 samples, 0.06%)</title><rect x="991.1" y="341" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="994.12" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (635,615 samples, 0.01%)</title><rect x="773.3" y="133" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="776.26" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (731,117 samples, 0.01%)</title><rect x="793.9" y="245" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="796.88" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (736,988 samples, 0.01%)</title><rect x="1173.9" y="469" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1176.86" y="479.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (725,150 samples, 0.01%)</title><rect x="881.9" y="341" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="884.88" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (652,361 samples, 0.01%)</title><rect x="457.7" y="485" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="460.68" y="495.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1,147,505 samples, 0.02%)</title><rect x="494.7" y="485" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="497.71" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (41,404,893 samples, 0.69%)</title><rect x="1157.4" y="389" width="8.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1160.41" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,819,279 samples, 0.05%)</title><rect x="1103.5" y="453" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.45" y="463.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (1,459,227 samples, 0.02%)</title><rect x="769.7" y="85" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="772.74" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (635,330 samples, 0.01%)</title><rect x="769.2" y="117" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="772.21" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (731,093 samples, 0.01%)</title><rect x="773.9" y="181" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="776.88" y="191.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (2,863,715 samples, 0.05%)</title><rect x="727.6" y="389" width="0.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="730.63" y="399.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (9,188,480 samples, 0.15%)</title><rect x="931.7" y="309" width="1.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="934.75" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (4,084,031 samples, 0.07%)</title><rect x="423.1" y="421" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="426.10" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr (5,715,029 samples, 0.10%)</title><rect x="548.4" y="373" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="551.39" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (659,510 samples, 0.01%)</title><rect x="797.6" y="261" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="800.59" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (620,880 samples, 0.01%)</title><rect x="772.2" y="133" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="775.20" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4,905,936 samples, 0.08%)</title><rect x="587.9" y="405" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="590.89" y="415.5" ></text>
</g>
<g >
<title>[tests] (2,107,086 samples, 0.04%)</title><rect x="1007.9" y="373" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1010.86" y="383.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (1,316,903 samples, 0.02%)</title><rect x="774.7" y="133" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="777.67" y="143.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,894,812 samples, 0.05%)</title><rect x="1043.7" y="389" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1046.69" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (6,694,938 samples, 0.11%)</title><rect x="484.6" y="405" width="1.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="487.57" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (7,132,368 samples, 0.12%)</title><rect x="820.3" y="277" width="1.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="823.28" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (660,087 samples, 0.01%)</title><rect x="1067.5" y="373" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1070.47" y="383.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (683,829 samples, 0.01%)</title><rect x="996.0" y="325" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="999.05" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (632,383 samples, 0.01%)</title><rect x="794.4" y="245" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="797.44" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1,135,745 samples, 0.02%)</title><rect x="496.1" y="421" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="499.13" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (4,050,683 samples, 0.07%)</title><rect x="819.3" y="277" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="822.26" y="287.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (4,379,348 samples, 0.07%)</title><rect x="777.6" y="213" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="780.56" y="223.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (13,927,050 samples, 0.23%)</title><rect x="789.0" y="293" width="2.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="791.96" y="303.5" ></text>
</g>
<g >
<title>__tls_get_addr (634,368 samples, 0.01%)</title><rect x="995.4" y="389" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="998.40" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (654,250 samples, 0.01%)</title><rect x="747.5" y="101" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="750.48" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,071,080 samples, 0.03%)</title><rect x="978.3" y="309" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="981.27" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,420,271 samples, 0.02%)</title><rect x="750.4" y="101" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="753.42" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1,392,272 samples, 0.02%)</title><rect x="955.4" y="357" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="958.36" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (654,250 samples, 0.01%)</title><rect x="747.5" y="69" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="750.48" y="79.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (705,069 samples, 0.01%)</title><rect x="558.2" y="357" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="561.15" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (2,763,898 samples, 0.05%)</title><rect x="943.9" y="373" width="0.5" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="946.86" y="383.5" ></text>
</g>
<g >
<title>operator new (2,129,797 samples, 0.04%)</title><rect x="1104.8" y="453" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1107.84" y="463.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (2,199,642 samples, 0.04%)</title><rect x="407.1" y="373" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="410.12" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (684,353 samples, 0.01%)</title><rect x="749.2" y="117" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="752.22" y="127.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (1,404,947 samples, 0.02%)</title><rect x="691.5" y="373" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="694.50" y="383.5" ></text>
</g>
<g >
<title>[tests] (657,188 samples, 0.01%)</title><rect x="339.8" y="405" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="342.84" y="415.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (737,613 samples, 0.01%)</title><rect x="341.0" y="357" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="344.03" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (4,152,088 samples, 0.07%)</title><rect x="834.9" y="341" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="837.87" y="351.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (2,209,520 samples, 0.04%)</title><rect x="1149.7" y="437" width="0.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1152.70" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1,941,345 samples, 0.03%)</title><rect x="440.6" y="453" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="443.58" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (1,253,248 samples, 0.02%)</title><rect x="940.8" y="341" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="943.77" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (12,711,728 samples, 0.21%)</title><rect x="1145.5" y="437" width="2.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1148.49" y="447.5" ></text>
</g>
<g >
<title>testing::TestSuite::~TestSuite (679,871 samples, 0.01%)</title><rect x="1178.2" y="597" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1181.18" y="607.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (660,522 samples, 0.01%)</title><rect x="940.1" y="325" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="943.10" y="335.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (167,557,652 samples, 2.79%)</title><rect x="744.7" y="245" width="32.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.66" y="255.5" >st..</text>
</g>
<g >
<title>__tls_get_addr (736,561 samples, 0.01%)</title><rect x="497.5" y="373" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="500.48" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (2,022,453 samples, 0.03%)</title><rect x="993.4" y="405" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="996.44" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (723,331 samples, 0.01%)</title><rect x="744.9" y="117" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="747.94" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,049,178 samples, 0.03%)</title><rect x="887.2" y="357" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="890.23" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2,685,211 samples, 0.04%)</title><rect x="751.0" y="85" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="753.98" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (736,913 samples, 0.01%)</title><rect x="855.2" y="309" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="858.20" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (655,684 samples, 0.01%)</title><rect x="784.0" y="181" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="787.03" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (1,626,983 samples, 0.03%)</title><rect x="1045.4" y="405" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1048.40" y="415.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (7,836,200 samples, 0.13%)</title><rect x="884.2" y="357" width="1.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="887.19" y="367.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,373,704 samples, 0.02%)</title><rect x="747.9" y="85" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="750.88" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (654,941 samples, 0.01%)</title><rect x="782.1" y="165" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="785.11" y="175.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (736,248 samples, 0.01%)</title><rect x="487.4" y="357" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="490.42" y="367.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (728,221 samples, 0.01%)</title><rect x="1112.4" y="437" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1115.45" y="447.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (736,552 samples, 0.01%)</title><rect x="879.1" y="277" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="882.11" y="287.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (1,201,170 samples, 0.02%)</title><rect x="785.6" y="181" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="788.58" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (643,934 samples, 0.01%)</title><rect x="797.3" y="261" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="800.33" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (1,386,062 samples, 0.02%)</title><rect x="754.3" y="101" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="757.28" y="111.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (1,473,268 samples, 0.02%)</title><rect x="800.9" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="803.91" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (973,139 samples, 0.02%)</title><rect x="762.0" y="133" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="765.01" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (974,657 samples, 0.02%)</title><rect x="763.3" y="165" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="766.26" y="175.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (12,893,595 samples, 0.21%)</title><rect x="691.8" y="373" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="694.78" y="383.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (683,563 samples, 0.01%)</title><rect x="1172.4" y="405" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1175.45" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (3,896,123 samples, 0.06%)</title><rect x="765.6" y="149" width="0.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="768.64" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (4,131,674 samples, 0.07%)</title><rect x="750.7" y="117" width="0.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="753.70" y="127.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (1,944,981 samples, 0.03%)</title><rect x="432.1" y="453" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="435.11" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_deallocate (662,214 samples, 0.01%)</title><rect x="1167.2" y="453" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1170.20" y="463.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (658,946 samples, 0.01%)</title><rect x="255.3" y="693" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="258.32" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (1,964,086 samples, 0.03%)</title><rect x="753.8" y="101" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="756.76" y="111.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (736,124 samples, 0.01%)</title><rect x="487.6" y="389" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="490.56" y="399.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (127,194,515 samples, 2.12%)</title><rect x="212.5" y="677" width="25.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="215.54" y="687.5" >p..</text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (737,137 samples, 0.01%)</title><rect x="424.7" y="421" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="427.72" y="431.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::RunAllTests (4,309,024,300 samples, 71.70%)</title><rect x="328.6" y="613" width="846.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="331.55" y="623.5" >testing::internal::UnitTestImpl::RunAllTests</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (651,945 samples, 0.01%)</title><rect x="1168.5" y="453" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1171.45" y="463.5" ></text>
</g>
<g >
<title>__lsan::PointsIntoChunk (1,643,325 samples, 0.03%)</title><rect x="1175.5" y="709" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1178.47" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4,774,114 samples, 0.08%)</title><rect x="746.4" y="117" width="1.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="749.42" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (119,519,159 samples, 1.99%)</title><rect x="1067.6" y="373" width="23.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1070.60" y="383.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (9,551,002 samples, 0.16%)</title><rect x="844.7" y="325" width="1.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="847.71" y="335.5" ></text>
</g>
<g >
<title>std::__heap_select&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (2,044,762 samples, 0.03%)</title><rect x="1170.2" y="421" width="0.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1173.18" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (658,208 samples, 0.01%)</title><rect x="755.4" y="37" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="758.36" y="47.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (10,209,581 samples, 0.17%)</title><rect x="870.4" y="293" width="2.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="873.45" y="303.5" ></text>
</g>
<g >
<title>__tls_get_addr (1,958,789 samples, 0.03%)</title><rect x="1067.1" y="373" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1070.09" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1,298,678 samples, 0.02%)</title><rect x="1168.6" y="485" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1171.58" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (670,432 samples, 0.01%)</title><rect x="939.1" y="373" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="942.13" y="383.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (735,854 samples, 0.01%)</title><rect x="879.0" y="245" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="881.96" y="255.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,410,461 samples, 0.04%)</title><rect x="740.3" y="405" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="743.29" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4,735,671 samples, 0.08%)</title><rect x="1030.6" y="325" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1033.65" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (8,470,717 samples, 0.14%)</title><rect x="829.6" y="309" width="1.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="832.62" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (646,861 samples, 0.01%)</title><rect x="755.1" y="37" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="758.09" y="47.5" ></text>
</g>
<g >
<title>__tls_get_addr (661,274 samples, 0.01%)</title><rect x="742.6" y="389" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="745.62" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (704,066 samples, 0.01%)</title><rect x="758.4" y="101" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="761.36" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (704,066 samples, 0.01%)</title><rect x="758.4" y="85" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="761.36" y="95.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,793,145 samples, 0.05%)</title><rect x="832.8" y="293" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="835.80" y="303.5" ></text>
</g>
<g >
<title>std::__unguarded_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (2,015,591 samples, 0.03%)</title><rect x="1169.8" y="453" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1172.78" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (634,648 samples, 0.01%)</title><rect x="773.0" y="133" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="776.04" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (634,648 samples, 0.01%)</title><rect x="773.0" y="149" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="776.04" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1,260,145 samples, 0.02%)</title><rect x="762.9" y="133" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="765.92" y="143.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (7,916,571 samples, 0.13%)</title><rect x="257.4" y="693" width="1.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="260.42" y="703.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (28,279,377 samples, 0.47%)</title><rect x="1026.0" y="341" width="5.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1029.02" y="351.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1,410,719 samples, 0.02%)</title><rect x="736.5" y="309" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="739.54" y="319.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (656,836 samples, 0.01%)</title><rect x="843.6" y="325" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="846.60" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (198,807,518 samples, 3.31%)</title><rect x="837.8" y="341" width="39.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="840.76" y="351.5" >__g..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,418,219 samples, 0.02%)</title><rect x="490.7" y="453" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="493.68" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (11,124,411 samples, 0.19%)</title><rect x="1035.0" y="341" width="2.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1037.97" y="351.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,276,597,586 samples, 21.24%)</title><rect x="741.8" y="421" width="250.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="744.84" y="431.5" >std::__introsort_loop&lt;__gnu_cxx::..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (2,021,794 samples, 0.03%)</title><rect x="942.4" y="373" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="945.35" y="383.5" ></text>
</g>
<g >
<title>testing::Message::GetString[abi:cxx11] (920,595 samples, 0.02%)</title><rect x="1174.7" y="629" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1177.65" y="639.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (634,860 samples, 0.01%)</title><rect x="259.1" y="661" width="0.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="262.07" y="671.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1,287,406 samples, 0.02%)</title><rect x="494.5" y="485" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="497.46" y="495.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (632,383 samples, 0.01%)</title><rect x="794.4" y="293" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="797.44" y="303.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::Bucket::~Bucket (39,574,409 samples, 0.66%)</title><rect x="440.5" y="469" width="7.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="443.45" y="479.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,224,648 samples, 0.02%)</title><rect x="794.9" y="293" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="797.94" y="303.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (10,355,207 samples, 0.17%)</title><rect x="676.8" y="341" width="2.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="679.82" y="351.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (1,945,186 samples, 0.03%)</title><rect x="1149.3" y="437" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1152.32" y="447.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (6,351,479 samples, 0.11%)</title><rect x="406.3" y="389" width="1.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="409.30" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (974,039 samples, 0.02%)</title><rect x="761.4" y="133" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="764.38" y="143.5" ></text>
</g>
<g >
<title>std::operator&lt; (658,598 samples, 0.01%)</title><rect x="1044.5" y="389" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1047.48" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (633,811 samples, 0.01%)</title><rect x="496.4" y="405" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="499.36" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (3,417,111 samples, 0.06%)</title><rect x="636.0" y="405" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="639.01" y="415.5" ></text>
</g>
<g >
<title>__tls_get_addr (737,255 samples, 0.01%)</title><rect x="790.1" y="245" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="793.09" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator (735,775 samples, 0.01%)</title><rect x="991.0" y="373" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="993.98" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3,234,392 samples, 0.05%)</title><rect x="994.8" y="357" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="997.77" y="367.5" ></text>
</g>
<g >
<title>__tls_get_addr (626,719 samples, 0.01%)</title><rect x="760.4" y="149" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="763.38" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (3,515,834 samples, 0.06%)</title><rect x="806.9" y="309" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="809.87" y="319.5" ></text>
</g>
<g >
<title>[tests] (1,282,552 samples, 0.02%)</title><rect x="861.2" y="293" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="864.15" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (19,803,603 samples, 0.33%)</title><rect x="372.2" y="421" width="3.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="375.15" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (632,598 samples, 0.01%)</title><rect x="761.7" y="149" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="764.70" y="159.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3,386,936 samples, 0.06%)</title><rect x="755.0" y="85" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="757.96" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (101,543,331 samples, 1.69%)</title><rect x="804.5" y="325" width="19.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="807.48" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,795,051 samples, 0.03%)</title><rect x="422.6" y="421" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="425.62" y="431.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (1,369,809 samples, 0.02%)</title><rect x="600.7" y="389" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="603.67" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (4,081,412 samples, 0.07%)</title><rect x="1160.3" y="357" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1163.30" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1,269,617 samples, 0.02%)</title><rect x="757.6" y="117" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="760.56" y="127.5" ></text>
</g>
<g >
<title>[tests] (736,430 samples, 0.01%)</title><rect x="496.9" y="389" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="499.85" y="399.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (3,843,863 samples, 0.06%)</title><rect x="83.5" y="677" width="0.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="86.46" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (6,053,129 samples, 0.10%)</title><rect x="571.3" y="341" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="574.34" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,370,496 samples, 0.02%)</title><rect x="880.1" y="357" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="883.08" y="367.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (1,940,598 samples, 0.03%)</title><rect x="872.1" y="277" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="875.07" y="287.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (737,490 samples, 0.01%)</title><rect x="955.2" y="357" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="958.21" y="367.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (3,341,750 samples, 0.06%)</title><rect x="736.2" y="341" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="739.16" y="351.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,393,897 samples, 0.02%)</title><rect x="375.8" y="405" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="378.77" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,364,765 samples, 0.02%)</title><rect x="791.9" y="277" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="794.93" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (626,659 samples, 0.01%)</title><rect x="768.4" y="117" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="771.36" y="127.5" ></text>
</g>
<g >
<title>__tls_get_addr (661,724 samples, 0.01%)</title><rect x="939.0" y="389" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="942.00" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4,130,166 samples, 0.07%)</title><rect x="757.8" y="133" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="760.81" y="143.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (15,234,871 samples, 0.25%)</title><rect x="816.3" y="277" width="3.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="819.27" y="287.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,122,757 samples, 0.04%)</title><rect x="468.0" y="437" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="471.01" y="447.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (729,930 samples, 0.01%)</title><rect x="780.6" y="197" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="783.62" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (634,205 samples, 0.01%)</title><rect x="884.8" y="293" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="887.77" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (654,080 samples, 0.01%)</title><rect x="751.4" y="69" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="754.38" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (670,622 samples, 0.01%)</title><rect x="1171.2" y="341" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1174.24" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,772,130 samples, 0.05%)</title><rect x="361.9" y="421" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="364.93" y="431.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (683,038 samples, 0.01%)</title><rect x="1172.8" y="405" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1175.85" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (732,285 samples, 0.01%)</title><rect x="798.0" y="341" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="801.00" y="351.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (3,054,214,911 samples, 50.82%)</title><rect x="494.9" y="469" width="599.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="497.93" y="479.5" >std::__sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::cha..</text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3,345,089 samples, 0.06%)</title><rect x="995.5" y="373" width="0.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="998.53" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,422,089 samples, 0.04%)</title><rect x="1008.8" y="373" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1011.82" y="383.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,127,302 samples, 0.02%)</title><rect x="10.1" y="661" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="13.14" y="671.5" ></text>
</g>
<g >
<title>[unknown] (7,048,906 samples, 0.12%)</title><rect x="12.5" y="677" width="1.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.53" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (650,891 samples, 0.01%)</title><rect x="758.2" y="117" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="761.23" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (920,595 samples, 0.02%)</title><rect x="1174.7" y="597" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1177.65" y="607.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1,391,308 samples, 0.02%)</title><rect x="753.5" y="85" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="756.49" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (737,191 samples, 0.01%)</title><rect x="501.4" y="389" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="504.40" y="399.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (677,641 samples, 0.01%)</title><rect x="132.1" y="677" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="135.14" y="687.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (634,823 samples, 0.01%)</title><rect x="1080.2" y="341" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1083.16" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (634,668 samples, 0.01%)</title><rect x="1045.7" y="389" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1048.72" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (1,365,524 samples, 0.02%)</title><rect x="992.6" y="405" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="995.63" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (13,869,414 samples, 0.23%)</title><rect x="978.7" y="325" width="2.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="981.67" y="335.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (18,968,943 samples, 0.32%)</title><rect x="759.7" y="181" width="3.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="762.73" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (736,890 samples, 0.01%)</title><rect x="808.5" y="309" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="811.49" y="319.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,306,599 samples, 0.02%)</title><rect x="1066.3" y="373" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1069.31" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (5,735,224 samples, 0.10%)</title><rect x="1033.8" y="341" width="1.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1036.84" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (169,500,085 samples, 2.82%)</title><rect x="457.8" y="485" width="33.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="460.81" y="495.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (658,465 samples, 0.01%)</title><rect x="757.0" y="117" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="760.05" y="127.5" ></text>
</g>
<g >
<title>[tests] (736,172 samples, 0.01%)</title><rect x="1140.5" y="389" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1143.47" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (653,159 samples, 0.01%)</title><rect x="366.8" y="437" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="369.81" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (619,958 samples, 0.01%)</title><rect x="772.3" y="149" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="775.33" y="159.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (736,319 samples, 0.01%)</title><rect x="786.7" y="245" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="789.68" y="255.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,361,072 samples, 0.02%)</title><rect x="1172.7" y="437" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1175.71" y="447.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (3,345,089 samples, 0.06%)</title><rect x="995.5" y="389" width="0.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="998.53" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt; (18,938,690 samples, 0.32%)</title><rect x="848.6" y="325" width="3.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="851.58" y="335.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I__ZN80SortedUniqueVectoredListTests_defaultConstructor_sizeOfEmptyContainerIsZero_Test10test_info_E (919,530 samples, 0.02%)</title><rect x="1174.8" y="693" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1177.83" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (736,992 samples, 0.01%)</title><rect x="883.5" y="309" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="886.52" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,119,126 samples, 0.04%)</title><rect x="475.4" y="421" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="478.44" y="431.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (683,015 samples, 0.01%)</title><rect x="447.4" y="373" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="450.39" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (736,370 samples, 0.01%)</title><rect x="1174.1" y="437" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1177.14" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (654,150 samples, 0.01%)</title><rect x="593.6" y="405" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="596.56" y="415.5" ></text>
</g>
<g >
<title>std::array&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 10ul&gt;::operator[] (7,152,203 samples, 0.12%)</title><rect x="428.8" y="469" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="431.82" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3,506,666 samples, 0.06%)</title><rect x="878.6" y="293" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="881.56" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (658,208 samples, 0.01%)</title><rect x="755.4" y="53" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="758.36" y="63.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (674,745 samples, 0.01%)</title><rect x="1174.0" y="373" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1177.01" y="383.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (4,133,594 samples, 0.07%)</title><rect x="1059.1" y="389" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1062.07" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (11,133,679 samples, 0.19%)</title><rect x="924.2" y="309" width="2.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="927.17" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (4,113,820 samples, 0.07%)</title><rect x="1135.8" y="405" width="0.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1138.82" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,130,268 samples, 0.04%)</title><rect x="885.3" y="309" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="888.31" y="319.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,458,925 samples, 0.02%)</title><rect x="777.6" y="197" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="780.56" y="207.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (1,304,836 samples, 0.02%)</title><rect x="883.8" y="309" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="886.79" y="319.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (659,876 samples, 0.01%)</title><rect x="758.1" y="69" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="761.10" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4,171,177 samples, 0.07%)</title><rect x="380.8" y="453" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="383.78" y="463.5" ></text>
</g>
<g >
<title>operator new (658,419 samples, 0.01%)</title><rect x="1151.9" y="437" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1154.88" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator- (2,125,749 samples, 0.04%)</title><rect x="880.4" y="373" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="883.35" y="383.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (224,478,615 samples, 3.74%)</title><rect x="744.5" y="309" width="44.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.51" y="319.5" >std:..</text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (737,199 samples, 0.01%)</title><rect x="744.5" y="261" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="747.51" y="271.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (2,066,164 samples, 0.03%)</title><rect x="1103.0" y="453" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1106.05" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (9,585,950 samples, 0.16%)</title><rect x="455.7" y="469" width="1.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="458.65" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,248,685 samples, 0.02%)</title><rect x="772.1" y="149" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="775.08" y="159.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (2,803,069 samples, 0.05%)</title><rect x="421.9" y="389" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="424.92" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (1,385,741 samples, 0.02%)</title><rect x="791.4" y="245" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="794.42" y="255.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (2,210,240 samples, 0.04%)</title><rect x="883.1" y="293" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="886.08" y="303.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,593,717 samples, 0.04%)</title><rect x="807.8" y="309" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="810.83" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (18,172,684 samples, 0.30%)</title><rect x="827.9" y="341" width="3.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="830.86" y="351.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (678,034 samples, 0.01%)</title><rect x="1172.7" y="357" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1175.71" y="367.5" ></text>
</g>
<g >
<title>std::__heap_select&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (18,968,943 samples, 0.32%)</title><rect x="759.7" y="197" width="3.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="762.73" y="207.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (1,371,497 samples, 0.02%)</title><rect x="1046.4" y="405" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1049.36" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (3,764,344 samples, 0.06%)</title><rect x="1173.0" y="501" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1175.98" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1,607,627 samples, 0.03%)</title><rect x="1173.4" y="453" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1176.40" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2,140,359 samples, 0.04%)</title><rect x="758.6" y="133" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="761.62" y="143.5" ></text>
</g>
<g >
<title>std::__partial_sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (73,265,730 samples, 1.22%)</title><rect x="744.7" y="181" width="14.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="747.66" y="191.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::allocate (634,860 samples, 0.01%)</title><rect x="259.1" y="693" width="0.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="262.07" y="703.5" ></text>
</g>
<g >
<title>std::operator&lt; (627,627 samples, 0.01%)</title><rect x="799.2" y="309" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="802.24" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (1,270,690 samples, 0.02%)</title><rect x="750.0" y="117" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="753.03" y="127.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (735,935 samples, 0.01%)</title><rect x="885.6" y="293" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="888.59" y="303.5" ></text>
</g>
<g >
<title>_sub_I_00099_1 (2,298,240 samples, 0.04%)</title><rect x="1175.0" y="693" width="0.5" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1178.01" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2,131,694 samples, 0.04%)</title><rect x="1178.3" y="709" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1181.32" y="719.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (2,872,044 samples, 0.05%)</title><rect x="883.0" y="309" width="0.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="885.95" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (1,364,765 samples, 0.02%)</title><rect x="791.9" y="293" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="794.93" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (16,682,620 samples, 0.28%)</title><rect x="414.5" y="405" width="3.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="417.50" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (736,988 samples, 0.01%)</title><rect x="1173.9" y="453" width="0.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1176.86" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (7,715,155 samples, 0.13%)</title><rect x="1009.3" y="373" width="1.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1012.29" y="383.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (626,655 samples, 0.01%)</title><rect x="770.8" y="117" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="773.82" y="127.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (661,927 samples, 0.01%)</title><rect x="745.8" y="117" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="748.75" y="127.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (634,205 samples, 0.01%)</title><rect x="884.8" y="261" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="887.77" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (686,433 samples, 0.01%)</title><rect x="786.1" y="277" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="789.05" y="287.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (7,263,318 samples, 0.12%)</title><rect x="799.4" y="309" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="802.36" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1,138,338,497 samples, 18.94%)</title><rect x="14.0" y="693" width="223.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.00" y="703.5" >[unknown]</text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (658,177 samples, 0.01%)</title><rect x="257.0" y="645" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="259.95" y="655.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,130,643 samples, 0.04%)</title><rect x="1104.4" y="453" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1107.42" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1,292,785 samples, 0.02%)</title><rect x="1169.2" y="453" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1172.25" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::capacity (736,641 samples, 0.01%)</title><rect x="1152.0" y="469" width="0.2" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="1155.01" y="479.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (2,762,560 samples, 0.05%)</title><rect x="424.2" y="421" width="0.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="427.17" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2,368,111 samples, 0.04%)</title><rect x="762.3" y="101" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="765.33" y="111.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,094,686 samples, 0.03%)</title><rect x="600.3" y="389" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="603.26" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (680,507 samples, 0.01%)</title><rect x="1172.0" y="373" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1175.04" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (2,197,065 samples, 0.04%)</title><rect x="795.8" y="293" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="798.78" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4,185,435 samples, 0.07%)</title><rect x="766.7" y="149" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="769.71" y="159.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (680,328 samples, 0.01%)</title><rect x="755.5" y="53" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="758.49" y="63.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (12,678,484 samples, 0.21%)</title><rect x="1136.9" y="405" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1139.92" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5,805,832 samples, 0.10%)</title><rect x="781.5" y="197" width="1.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="784.54" y="207.5" ></text>
</g>
<g >
<title>std::__sort_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (47,885,816 samples, 0.80%)</title><rect x="749.6" y="165" width="9.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="752.64" y="175.5" ></text>
</g>
<g >
<title>std::operator&lt; (1,362,837 samples, 0.02%)</title><rect x="740.0" y="405" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="743.03" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,396,210 samples, 0.02%)</title><rect x="344.6" y="453" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="347.62" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (625,729 samples, 0.01%)</title><rect x="785.1" y="229" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="788.09" y="239.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (735,196 samples, 0.01%)</title><rect x="417.6" y="357" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="420.64" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,187,133 samples, 0.04%)</title><rect x="587.5" y="405" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="590.46" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (684,657 samples, 0.01%)</title><rect x="938.3" y="389" width="0.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="941.33" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (111,771,200 samples, 1.86%)</title><rect x="345.4" y="453" width="22.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="348.42" y="463.5" >s..</text>
</g>
<g >
<title>__interceptor_memcpy (653,835 samples, 0.01%)</title><rect x="746.2" y="85" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="749.16" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::insert (1,292,785 samples, 0.02%)</title><rect x="1169.2" y="485" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1172.25" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (2,127,607 samples, 0.04%)</title><rect x="1091.1" y="373" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1094.07" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,460,104 samples, 0.02%)</title><rect x="778.0" y="181" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="781.04" y="191.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,038,689 samples, 0.03%)</title><rect x="759.3" y="149" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="762.33" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (463,139,211 samples, 7.71%)</title><rect x="637.3" y="405" width="90.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="640.26" y="415.5" >std::__cxx..</text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,735,854 samples, 0.05%)</title><rect x="383.8" y="437" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="386.79" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (4,616,506 samples, 0.08%)</title><rect x="774.0" y="181" width="0.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="777.02" y="191.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (9,243,732 samples, 0.15%)</title><rect x="778.4" y="197" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="781.42" y="207.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (1,469,463 samples, 0.02%)</title><rect x="534.6" y="389" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="537.64" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (655,229 samples, 0.01%)</title><rect x="756.5" y="53" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="759.54" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (661,064 samples, 0.01%)</title><rect x="755.9" y="85" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="758.89" y="95.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (16,523,923 samples, 0.27%)</title><rect x="1027.4" y="325" width="3.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1030.40" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (3,833,464 samples, 0.06%)</title><rect x="770.6" y="133" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="773.63" y="143.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8,797,068 samples, 0.15%)</title><rect x="497.3" y="389" width="1.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="500.35" y="399.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (737,221 samples, 0.01%)</title><rect x="829.3" y="309" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="832.33" y="319.5" ></text>
</g>
<g >
<title>[tests] (1,324,708 samples, 0.02%)</title><rect x="816.0" y="277" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="819.01" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,789,707 samples, 0.05%)</title><rect x="959.2" y="341" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="962.17" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (661,694 samples, 0.01%)</title><rect x="1158.4" y="373" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1161.37" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (736,988 samples, 0.01%)</title><rect x="1173.9" y="485" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1176.86" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,761,521 samples, 0.05%)</title><rect x="392.4" y="421" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="395.35" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_Head_base (736,370 samples, 0.01%)</title><rect x="1174.1" y="357" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1177.14" y="367.5" ></text>
</g>
<g >
<title>[tests] (736,819 samples, 0.01%)</title><rect x="478.6" y="421" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="481.59" y="431.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (266,423,022 samples, 4.43%)</title><rect x="885.7" y="373" width="52.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="888.73" y="383.5" >std::..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (606,818 samples, 0.01%)</title><rect x="776.4" y="133" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="779.44" y="143.5" ></text>
</g>
<g >
<title>__tls_get_addr (5,059,593 samples, 0.08%)</title><rect x="539.3" y="389" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="542.30" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (723,505 samples, 0.01%)</title><rect x="991.4" y="325" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="994.40" y="335.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,999,814 samples, 0.10%)</title><rect x="350.4" y="437" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="353.40" y="447.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (667,768 samples, 0.01%)</title><rect x="503.7" y="341" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="506.67" y="351.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (147,229,346 samples, 2.45%)</title><rect x="906.1" y="341" width="29.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="909.15" y="351.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,784,750 samples, 0.03%)</title><rect x="376.0" y="421" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="379.04" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1,430,386 samples, 0.02%)</title><rect x="489.9" y="437" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="492.86" y="447.5" ></text>
</g>
<g >
<title>[unknown] (129,243,084 samples, 2.15%)</title><rect x="18.7" y="677" width="25.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="21.66" y="687.5" >[..</text>
</g>
<g >
<title>__asan::GetFakeStackFast (726,956 samples, 0.01%)</title><rect x="337.2" y="453" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="340.25" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (971,019 samples, 0.02%)</title><rect x="771.6" y="149" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="774.60" y="159.5" ></text>
</g>
<g >
<title>std::operator&lt; (9,993,030 samples, 0.17%)</title><rect x="808.6" y="309" width="2.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="811.63" y="319.5" ></text>
</g>
<g >
<title>[unknown] (672,557 samples, 0.01%)</title><rect x="1170.0" y="405" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1173.05" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,842,482 samples, 0.06%)</title><rect x="383.0" y="437" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="386.04" y="447.5" ></text>
</g>
<g >
<title>__asan_register_globals.part.0 (1,377,352 samples, 0.02%)</title><rect x="1175.0" y="677" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1178.01" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1,472,924 samples, 0.02%)</title><rect x="384.9" y="437" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="387.91" y="447.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (663,255 samples, 0.01%)</title><rect x="958.9" y="341" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="961.90" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (2,130,483 samples, 0.04%)</title><rect x="934.5" y="325" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="937.51" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (651,945 samples, 0.01%)</title><rect x="1168.5" y="501" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1171.45" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (661,044 samples, 0.01%)</title><rect x="1169.2" y="421" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1172.25" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (8,291,921 samples, 0.14%)</title><rect x="924.7" y="293" width="1.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="927.73" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (658,801 samples, 0.01%)</title><rect x="794.7" y="325" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="797.69" y="335.5" ></text>
</g>
<g >
<title>testing::internal::EqHelper::Compare&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;,  (674,745 samples, 0.01%)</title><rect x="1174.0" y="501" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1177.01" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,434,160 samples, 0.04%)</title><rect x="765.9" y="133" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="768.92" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (17,816,172 samples, 0.30%)</title><rect x="477.8" y="437" width="3.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="480.77" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (972,403 samples, 0.02%)</title><rect x="780.3" y="197" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="783.33" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,747,792 samples, 0.05%)</title><rect x="340.6" y="405" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="343.64" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (734,693 samples, 0.01%)</title><rect x="884.3" y="341" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="887.34" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (1,377,331 samples, 0.02%)</title><rect x="788.7" y="277" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="791.69" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (735,845 samples, 0.01%)</title><rect x="746.9" y="101" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="749.94" y="111.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (1,301,228 samples, 0.02%)</title><rect x="1025.4" y="341" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1028.36" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1,408,927 samples, 0.02%)</title><rect x="1130.1" y="421" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1133.13" y="431.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredListTests_pushBack_pushingNotSortedElements_expectedElementsInContainerSorted_Test::TestBody (966,903 samples, 0.02%)</title><rect x="328.8" y="517" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="331.78" y="527.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,361,072 samples, 0.02%)</title><rect x="1172.7" y="453" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1175.71" y="463.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,472,837 samples, 0.02%)</title><rect x="782.8" y="245" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="785.81" y="255.5" ></text>
</g>
<g >
<title>std::__copy_move_backward_a2&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (683,481 samples, 0.01%)</title><rect x="1169.6" y="389" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1172.65" y="399.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (662,480 samples, 0.01%)</title><rect x="883.7" y="309" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="886.66" y="319.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (2,044,762 samples, 0.03%)</title><rect x="1170.2" y="405" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1173.18" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,539,366 samples, 0.04%)</title><rect x="936.7" y="309" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="939.68" y="319.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (660,116 samples, 0.01%)</title><rect x="338.7" y="421" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="341.66" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (3,557,074 samples, 0.06%)</title><rect x="821.8" y="277" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="824.78" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (674,690 samples, 0.01%)</title><rect x="1169.9" y="405" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1172.91" y="415.5" ></text>
</g>
<g >
<title>operator delete (662,214 samples, 0.01%)</title><rect x="1167.2" y="437" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1170.20" y="447.5" ></text>
</g>
<g >
<title>std::__heap_select&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (25,379,914 samples, 0.42%)</title><rect x="744.7" y="165" width="4.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="747.66" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (729,930 samples, 0.01%)</title><rect x="780.6" y="181" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="783.62" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (1,311,057 samples, 0.02%)</title><rect x="756.4" y="85" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="759.41" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,140,359 samples, 0.04%)</title><rect x="758.6" y="101" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="761.62" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::end (661,845 samples, 0.01%)</title><rect x="1094.6" y="485" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1097.64" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (651,945 samples, 0.01%)</title><rect x="1168.5" y="485" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1171.45" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (736,858 samples, 0.01%)</title><rect x="749.4" y="133" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="752.36" y="143.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (30,138,297 samples, 0.50%)</title><rect x="827.4" y="357" width="5.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="830.43" y="367.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (662,886 samples, 0.01%)</title><rect x="934.9" y="325" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="937.93" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1,296,050 samples, 0.02%)</title><rect x="747.4" y="117" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="750.36" y="127.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (661,284 samples, 0.01%)</title><rect x="757.2" y="85" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="760.18" y="95.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (275,757,512 samples, 4.59%)</title><rect x="825.9" y="373" width="54.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="828.94" y="383.5" >std::..</text>
</g>
<g >
<title>__tls_get_addr (643,875 samples, 0.01%)</title><rect x="827.3" y="357" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="830.30" y="367.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (736,485 samples, 0.01%)</title><rect x="791.9" y="229" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="794.93" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (73,751,964 samples, 1.23%)</title><rect x="1152.3" y="453" width="14.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1155.28" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (972,699 samples, 0.02%)</title><rect x="764.6" y="149" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="767.58" y="159.5" ></text>
</g>
<g >
<title>std::operator&lt; (1,897,996 samples, 0.03%)</title><rect x="882.0" y="341" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="885.02" y="351.5" ></text>
</g>
<g >
<title>std::construct_at&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (257,487,499 samples, 4.28%)</title><rect x="1100.7" y="469" width="50.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1103.68" y="479.5" >std::..</text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,351,645 samples, 0.02%)</title><rect x="1170.8" y="357" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1173.84" y="367.5" ></text>
</g>
<g >
<title>__lsan::ForEachChunk (1,808,059 samples, 0.03%)</title><rect x="242.9" y="693" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="245.85" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (8,169,511 samples, 0.14%)</title><rect x="714.1" y="357" width="1.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="717.13" y="367.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (1,468,154 samples, 0.02%)</title><rect x="941.3" y="373" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="944.27" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator (1,394,799 samples, 0.02%)</title><rect x="935.1" y="341" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="938.06" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (2,203,546 samples, 0.04%)</title><rect x="495.5" y="421" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="498.46" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_less_iter::operator (668,344 samples, 0.01%)</title><rect x="1169.8" y="421" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1172.78" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,020,907 samples, 0.03%)</title><rect x="954.8" y="357" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="957.81" y="367.5" ></text>
</g>
<g >
<title>[tests] (1,365,713 samples, 0.02%)</title><rect x="886.7" y="357" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="889.69" y="367.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (2,060,578 samples, 0.03%)</title><rect x="975.1" y="309" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="978.14" y="319.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,798,821,113 samples, 29.93%)</title><rect x="741.4" y="453" width="353.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="744.44" y="463.5" >std::__introsort_loop&lt;__gnu_cxx::__normal_itera..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (6,350,425 samples, 0.11%)</title><rect x="999.5" y="389" width="1.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1002.48" y="399.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,394,694 samples, 0.02%)</title><rect x="773.6" y="197" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="776.61" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (4,477,723 samples, 0.07%)</title><rect x="540.8" y="389" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="543.79" y="399.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_val&gt; (971,005 samples, 0.02%)</title><rect x="780.0" y="181" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="783.04" y="191.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (12,242,421 samples, 0.20%)</title><rect x="775.2" y="213" width="2.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="778.16" y="223.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (6,962,378 samples, 0.12%)</title><rect x="878.3" y="341" width="1.4" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="881.30" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,383,890 samples, 0.02%)</title><rect x="445.3" y="389" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="448.33" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,461,162 samples, 0.02%)</title><rect x="779.2" y="165" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="782.18" y="175.5" ></text>
</g>
<g >
<title>__sanitizer::DTLS_on_tls_get_addr (408,386,105 samples, 6.80%)</title><rect x="132.3" y="677" width="80.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="135.27" y="687.5" >__sanitiz..</text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (674,745 samples, 0.01%)</title><rect x="1174.0" y="437" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1177.01" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1,353,637 samples, 0.02%)</title><rect x="1171.2" y="373" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1174.24" y="383.5" ></text>
</g>
<g >
<title>__lsan::MarkIndirectlyLeakedCb (683,335 samples, 0.01%)</title><rect x="244.3" y="693" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="247.34" y="703.5" ></text>
</g>
<g >
<title>__tls_get_addr (1,473,538 samples, 0.02%)</title><rect x="1018.3" y="357" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1021.25" y="367.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (2,902,678 samples, 0.05%)</title><rect x="901.0" y="341" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="904.00" y="351.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (2,751,096 samples, 0.05%)</title><rect x="1055.8" y="389" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1058.77" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (661,423 samples, 0.01%)</title><rect x="795.3" y="309" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="798.28" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (11,943,784 samples, 0.20%)</title><rect x="420.3" y="421" width="2.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="423.27" y="431.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (1,398,264 samples, 0.02%)</title><rect x="790.5" y="213" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="793.49" y="223.5" ></text>
</g>
<g >
<title>[tests] (732,225 samples, 0.01%)</title><rect x="906.8" y="325" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="909.81" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (8,890,956 samples, 0.15%)</title><rect x="606.6" y="389" width="1.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="609.61" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (77,902,930 samples, 1.30%)</title><rect x="1152.2" y="485" width="15.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1155.16" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,211,945 samples, 0.07%)</title><rect x="997.5" y="389" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1000.52" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (973,864 samples, 0.02%)</title><rect x="770.4" y="133" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="773.44" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (672,782 samples, 0.01%)</title><rect x="1170.7" y="373" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1173.71" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (662,084 samples, 0.01%)</title><rect x="880.8" y="373" width="0.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="883.77" y="383.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (632,383 samples, 0.01%)</title><rect x="794.4" y="277" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="797.44" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (4,316,633 samples, 0.07%)</title><rect x="688.5" y="373" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="691.51" y="383.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,351,459 samples, 0.02%)</title><rect x="752.8" y="69" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="755.83" y="79.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3,000,799 samples, 0.05%)</title><rect x="762.2" y="117" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="765.21" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (731,183 samples, 0.01%)</title><rect x="884.9" y="309" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="887.89" y="319.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (662,162 samples, 0.01%)</title><rect x="777.4" y="181" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="780.43" y="191.5" ></text>
</g>
<g >
<title>std::operator&lt; (7,437,461 samples, 0.12%)</title><rect x="955.9" y="357" width="1.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="958.90" y="367.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (15,256,284 samples, 0.25%)</title><rect x="791.7" y="325" width="3.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="794.69" y="335.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (2,772,510 samples, 0.05%)</title><rect x="614.2" y="373" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="617.25" y="383.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (8,955,378 samples, 0.15%)</title><rect x="578.0" y="357" width="1.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="581.01" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (12,110,585 samples, 0.20%)</title><rect x="751.9" y="117" width="2.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="754.91" y="127.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (737,199 samples, 0.01%)</title><rect x="1055.5" y="389" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1058.48" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (44,038,779 samples, 0.73%)</title><rect x="694.3" y="389" width="8.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="697.31" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (736,149 samples, 0.01%)</title><rect x="940.0" y="325" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="942.96" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (3,519,758 samples, 0.06%)</title><rect x="449.9" y="485" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="452.89" y="495.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (277,372,830 samples, 4.62%)</title><rect x="938.0" y="405" width="54.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="941.04" y="415.5" >std::..</text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (1,216,138 samples, 0.02%)</title><rect x="1143.7" y="421" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1146.72" y="431.5" ></text>
</g>
<g >
<title>std::__copy_move_backward_a1&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (683,481 samples, 0.01%)</title><rect x="1169.6" y="405" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1172.65" y="415.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (3,485,419 samples, 0.06%)</title><rect x="1017.6" y="357" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1020.57" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (624,237 samples, 0.01%)</title><rect x="940.8" y="325" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="943.77" y="335.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (723,567 samples, 0.01%)</title><rect x="752.2" y="101" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="755.16" y="111.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (154,909,151 samples, 2.58%)</title><rect x="99.9" y="677" width="30.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="102.93" y="687.5" >__..</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (1,981,860 samples, 0.03%)</title><rect x="938.5" y="389" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="941.46" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (2,244,209 samples, 0.04%)</title><rect x="759.9" y="149" width="0.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="762.94" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (679,015 samples, 0.01%)</title><rect x="328.6" y="437" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="331.55" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1,404,918 samples, 0.02%)</title><rect x="471.6" y="437" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="474.61" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3,059,186 samples, 0.05%)</title><rect x="785.2" y="229" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="788.21" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (656,108 samples, 0.01%)</title><rect x="940.2" y="341" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="943.23" y="351.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,099,659 samples, 0.03%)</title><rect x="1104.0" y="453" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1107.01" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (730,670 samples, 0.01%)</title><rect x="781.5" y="181" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="784.54" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (19,838,616 samples, 0.33%)</title><rect x="453.6" y="485" width="3.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="456.64" y="495.5" ></text>
</g>
<g >
<title>__tls_get_addr (3,478,778 samples, 0.06%)</title><rect x="584.7" y="405" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="587.71" y="415.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (11,927,878 samples, 0.20%)</title><rect x="993.8" y="405" width="2.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="996.84" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt; (736,742 samples, 0.01%)</title><rect x="793.2" y="277" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="796.17" y="287.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (12,913,082 samples, 0.21%)</title><rect x="1170.2" y="453" width="2.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1173.18" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (36,508,004 samples, 0.61%)</title><rect x="369.9" y="453" width="7.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="372.91" y="463.5" ></text>
</g>
<g >
<title>std::__partial_sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (15,569,163 samples, 0.26%)</title><rect x="777.6" y="245" width="3.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="780.56" y="255.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (638,232 samples, 0.01%)</title><rect x="502.1" y="373" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="505.05" y="383.5" ></text>
</g>
<g >
<title>[tests] (736,527 samples, 0.01%)</title><rect x="787.6" y="213" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="790.59" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (4,930,823 samples, 0.08%)</title><rect x="506.9" y="421" width="1.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="509.94" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (56,459,881 samples, 0.94%)</title><rect x="812.0" y="293" width="11.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="814.96" y="303.5" ></text>
</g>
<g >
<title>main (4,309,024,300 samples, 71.70%)</title><rect x="328.6" y="693" width="846.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="331.55" y="703.5" >main</text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (221,781,060 samples, 3.69%)</title><rect x="891.5" y="357" width="43.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="894.51" y="367.5" >__gn..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2,804,887 samples, 0.05%)</title><rect x="1042.1" y="357" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1045.10" y="367.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::free (7,048,906 samples, 0.12%)</title><rect x="12.5" y="693" width="1.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="15.53" y="703.5" ></text>
</g>
<g >
<title>testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (4,309,024,300 samples, 71.70%)</title><rect x="328.6" y="645" width="846.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="331.55" y="655.5" >testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (675,550 samples, 0.01%)</title><rect x="1170.4" y="341" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1173.45" y="351.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (1,820,254 samples, 0.03%)</title><rect x="783.7" y="165" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="786.67" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (7,804,563 samples, 0.13%)</title><rect x="511.8" y="405" width="1.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="514.82" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6,170,318 samples, 0.10%)</title><rect x="776.0" y="181" width="1.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="779.00" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (684,702 samples, 0.01%)</title><rect x="743.0" y="373" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="746.02" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (16,126,625 samples, 0.27%)</title><rect x="574.8" y="357" width="3.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="577.85" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1,304,763 samples, 0.02%)</title><rect x="756.8" y="117" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="759.79" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,379,578 samples, 0.02%)</title><rect x="878.8" y="277" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="881.84" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,332,458 samples, 0.02%)</title><rect x="823.5" y="293" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="826.46" y="303.5" ></text>
</g>
<g >
<title>all (6,009,515,444 samples, 100%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6,477,499 samples, 0.11%)</title><rect x="973.9" y="309" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="976.87" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (679,415 samples, 0.01%)</title><rect x="747.1" y="101" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="750.08" y="111.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (11,749,128 samples, 0.20%)</title><rect x="786.3" y="277" width="2.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="789.28" y="287.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3,858,211 samples, 0.06%)</title><rect x="255.9" y="645" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="258.91" y="655.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::Bucket::Bucket (158,355,897 samples, 2.64%)</title><rect x="336.6" y="485" width="31.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="339.56" y="495.5" >So..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,418,610 samples, 0.11%)</title><rect x="535.6" y="389" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="538.60" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6,376,818 samples, 0.11%)</title><rect x="921.0" y="293" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="923.99" y="303.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (1,363,031 samples, 0.02%)</title><rect x="1147.7" y="421" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1150.72" y="431.5" ></text>
</g>
<g >
<title>std::for_each&lt;__gnu_cxx::__normal_iterator&lt;testing::TestInfo* const*, std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt; &gt;, void  (679,871 samples, 0.01%)</title><rect x="1178.2" y="549" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1181.18" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (635,143 samples, 0.01%)</title><rect x="763.0" y="117" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="766.04" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (632,242 samples, 0.01%)</title><rect x="789.0" y="277" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="791.96" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (736,086 samples, 0.01%)</title><rect x="440.3" y="453" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="443.31" y="463.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (1,392,382 samples, 0.02%)</title><rect x="422.2" y="373" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="425.20" y="383.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (2,186,121 samples, 0.04%)</title><rect x="1147.3" y="405" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1150.29" y="415.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (9,617,440 samples, 0.16%)</title><rect x="985.0" y="325" width="1.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="987.99" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (6,919,258 samples, 0.12%)</title><rect x="374.4" y="405" width="1.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="377.41" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (653,001 samples, 0.01%)</title><rect x="782.2" y="165" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="785.24" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,372,941 samples, 0.02%)</title><rect x="490.1" y="453" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="493.14" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (618,194 samples, 0.01%)</title><rect x="792.3" y="293" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="795.32" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (26,945,158 samples, 0.45%)</title><rect x="615.8" y="389" width="5.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="618.83" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (124,724,384 samples, 2.08%)</title><rect x="852.3" y="325" width="24.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="855.30" y="335.5" >s..</text>
</g>
<g >
<title>__sanitizer::internal_memset (915,560 samples, 0.02%)</title><rect x="1184.9" y="709" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1187.93" y="719.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (2,107,825 samples, 0.04%)</title><rect x="1164.6" y="325" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1167.56" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (718,382 samples, 0.01%)</title><rect x="867.0" y="293" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="870.01" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (661,284 samples, 0.01%)</title><rect x="757.2" y="117" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="760.18" y="127.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (4,864,513 samples, 0.08%)</title><rect x="582.7" y="373" width="0.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="585.66" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (5,486,920 samples, 0.09%)</title><rect x="784.7" y="245" width="1.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="787.74" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (152,053,816 samples, 2.53%)</title><rect x="549.9" y="373" width="29.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="552.91" y="383.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (720,500 samples, 0.01%)</title><rect x="501.8" y="373" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="504.78" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (974,213 samples, 0.02%)</title><rect x="766.9" y="133" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="769.90" y="143.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (680,442 samples, 0.01%)</title><rect x="244.2" y="693" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="247.21" y="703.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (16,056,461 samples, 0.27%)</title><rect x="1037.4" y="341" width="3.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1040.42" y="351.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (1,472,305 samples, 0.02%)</title><rect x="801.5" y="261" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="804.47" y="271.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,071,349 samples, 0.03%)</title><rect x="937.5" y="357" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="940.54" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (670,442 samples, 0.01%)</title><rect x="501.9" y="373" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="504.92" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (662,837 samples, 0.01%)</title><rect x="831.2" y="293" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="834.16" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (14,598,516 samples, 0.24%)</title><rect x="734.1" y="357" width="2.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="737.10" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (17,090,978 samples, 0.28%)</title><rect x="657.3" y="389" width="3.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="660.27" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_move (631,741 samples, 0.01%)</title><rect x="1169.4" y="437" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1172.38" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,357,018 samples, 0.02%)</title><rect x="130.1" y="645" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="133.08" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6,305,758 samples, 0.10%)</title><rect x="499.6" y="405" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="502.59" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (683,829 samples, 0.01%)</title><rect x="996.0" y="341" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="999.05" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1,263,462 samples, 0.02%)</title><rect x="773.3" y="149" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="776.26" y="159.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (50,099,372 samples, 0.83%)</title><rect x="763.8" y="181" width="9.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="766.77" y="191.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (66,281,953 samples, 1.10%)</title><rect x="44.0" y="677" width="13.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="47.04" y="687.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (34,371,482 samples, 0.57%)</title><rect x="968.8" y="325" width="6.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="971.80" y="335.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1,224,648 samples, 0.02%)</title><rect x="794.9" y="309" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="797.94" y="319.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (23,556,353 samples, 0.39%)</title><rect x="649.5" y="373" width="4.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="652.51" y="383.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (3,511,141 samples, 0.06%)</title><rect x="585.4" y="405" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="588.40" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (138,317,319 samples, 2.30%)</title><rect x="959.7" y="341" width="27.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="962.72" y="351.5" >s..</text>
</g>
<g >
<title>std::operator&lt; (658,564 samples, 0.01%)</title><rect x="774.4" y="165" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="777.42" y="175.5" ></text>
</g>
<g >
<title>__tls_get_addr (5,411,957 samples, 0.09%)</title><rect x="1059.9" y="389" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1062.88" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (736,145 samples, 0.01%)</title><rect x="782.8" y="213" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="785.81" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (735,809 samples, 0.01%)</title><rect x="791.4" y="229" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="794.42" y="239.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (736,086 samples, 0.01%)</title><rect x="1087.1" y="357" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1090.10" y="367.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1,372,509 samples, 0.02%)</title><rect x="1166.5" y="437" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1169.50" y="447.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Val_less_iter&gt; (1,150,262,973 samples, 19.14%)</title><rect x="514.9" y="421" width="225.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="517.91" y="431.5" >std::__unguarded_linear_inser..</text>
</g>
<g >
<title>__asan::GetFakeStackFast (2,022,683 samples, 0.03%)</title><rect x="1112.7" y="437" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1115.68" y="447.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (2,835,484 samples, 0.05%)</title><rect x="447.5" y="389" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="450.52" y="399.5" ></text>
</g>
<g >
<title>[tests] (683,015 samples, 0.01%)</title><rect x="1171.4" y="341" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1174.38" y="351.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (634,648 samples, 0.01%)</title><rect x="773.0" y="117" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="776.04" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (661,284 samples, 0.01%)</title><rect x="757.2" y="101" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="760.18" y="111.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (736,370 samples, 0.01%)</title><rect x="1174.1" y="453" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1177.14" y="463.5" ></text>
</g>
<g >
<title>std::array&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 10ul&gt;::~array (36,987,286 samples, 0.62%)</title><rect x="441.0" y="453" width="7.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="443.96" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_less_iter::operator (279,959,279 samples, 4.66%)</title><rect x="528.6" y="405" width="55.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="531.64" y="415.5" >__gnu..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (659,876 samples, 0.01%)</title><rect x="758.1" y="117" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="761.10" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,472,400 samples, 0.02%)</title><rect x="827.6" y="341" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="830.57" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (2,025,610 samples, 0.03%)</title><rect x="826.2" y="357" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="829.23" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (15,997,306 samples, 0.27%)</title><rect x="354.3" y="437" width="3.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="357.27" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4,766,946 samples, 0.08%)</title><rect x="787.3" y="229" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="790.31" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3,439,418 samples, 0.06%)</title><rect x="875.3" y="309" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="878.28" y="319.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (655,006 samples, 0.01%)</title><rect x="783.5" y="213" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="786.55" y="223.5" ></text>
</g>
<g >
<title>__tls_get_addr (661,690 samples, 0.01%)</title><rect x="428.3" y="469" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="431.27" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (628,414 samples, 0.01%)</title><rect x="503.3" y="389" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="506.26" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (11,306,479 samples, 0.19%)</title><rect x="1141.2" y="389" width="2.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1144.24" y="399.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (22,771,499 samples, 0.38%)</title><rect x="560.7" y="341" width="4.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="563.71" y="351.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (2,751,236 samples, 0.05%)</title><rect x="1081.4" y="341" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1084.37" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (647,104 samples, 0.01%)</title><rect x="747.8" y="85" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="750.75" y="95.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (614,152 samples, 0.01%)</title><rect x="505.3" y="421" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="508.28" y="431.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_val&gt; (4,100,177 samples, 0.07%)</title><rect x="747.6" y="117" width="0.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="750.61" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (7,734,532 samples, 0.13%)</title><rect x="868.8" y="293" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="871.79" y="303.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (732,067 samples, 0.01%)</title><rect x="928.7" y="309" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="931.67" y="319.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2,731,335 samples, 0.05%)</title><rect x="489.3" y="437" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="492.33" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5,332,157 samples, 0.09%)</title><rect x="796.4" y="293" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="799.41" y="303.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (651,475 samples, 0.01%)</title><rect x="759.3" y="117" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="762.33" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2,140,359 samples, 0.04%)</title><rect x="758.6" y="117" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="761.62" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,102,758 samples, 0.03%)</title><rect x="1113.1" y="437" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1116.08" y="447.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::Iterator::operator++ (1,381,711 samples, 0.02%)</title><rect x="428.0" y="469" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="431.00" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (659,716 samples, 0.01%)</title><rect x="1092.0" y="373" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1095.01" y="383.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (677,254 samples, 0.01%)</title><rect x="244.1" y="693" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="247.08" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (660,127 samples, 0.01%)</title><rect x="786.4" y="261" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="789.41" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (68,048,382 samples, 1.13%)</title><rect x="680.9" y="389" width="13.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="683.95" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (641,452 samples, 0.01%)</title><rect x="777.3" y="197" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="780.30" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (635,339 samples, 0.01%)</title><rect x="1018.7" y="357" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1021.69" y="367.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (736,124 samples, 0.01%)</title><rect x="794.3" y="245" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="797.30" y="255.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (4,298,298 samples, 0.07%)</title><rect x="567.0" y="341" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="569.96" y="351.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (203,628,548 samples, 3.39%)</title><rect x="744.5" y="277" width="40.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.51" y="287.5" >std..</text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,394,694 samples, 0.02%)</title><rect x="773.6" y="165" width="0.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="776.61" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (659,842 samples, 0.01%)</title><rect x="995.7" y="357" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="998.67" y="367.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (17,301,277 samples, 0.29%)</title><rect x="861.4" y="293" width="3.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="864.41" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (134,753,542 samples, 2.24%)</title><rect x="463.7" y="453" width="26.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="466.69" y="463.5" >s..</text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,529,981 samples, 0.04%)</title><rect x="846.6" y="325" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="849.58" y="335.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (1,363,030 samples, 0.02%)</title><rect x="1037.2" y="341" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1040.15" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (661,865 samples, 0.01%)</title><rect x="1042.7" y="357" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1045.66" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (4,890,733 samples, 0.08%)</title><rect x="1156.4" y="389" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1159.45" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (4,050,003 samples, 0.07%)</title><rect x="847.1" y="325" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="850.08" y="335.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::size (684,947 samples, 0.01%)</title><rect x="1167.6" y="501" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1170.59" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (625,002 samples, 0.01%)</title><rect x="762.9" y="101" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="765.92" y="111.5" ></text>
</g>
<g >
<title>testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (4,307,633,721 samples, 71.68%)</title><rect x="328.6" y="549" width="845.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="331.55" y="559.5" >testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt;</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (6,634,147 samples, 0.11%)</title><rect x="588.9" y="405" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="591.85" y="415.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (674,745 samples, 0.01%)</title><rect x="1174.0" y="485" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1177.01" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (96,683,036 samples, 1.61%)</title><rect x="703.0" y="389" width="18.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="705.96" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (731,473 samples, 0.01%)</title><rect x="784.5" y="213" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="787.50" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (630,693 samples, 0.01%)</title><rect x="746.5" y="85" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="749.55" y="95.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1,467,819 samples, 0.02%)</title><rect x="375.5" y="373" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="378.48" y="383.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (674,745 samples, 0.01%)</title><rect x="1174.0" y="453" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1177.01" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (9,802,904 samples, 0.16%)</title><rect x="780.8" y="213" width="1.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="783.76" y="223.5" ></text>
</g>
<g >
<title>std::__heap_select&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (4,379,348 samples, 0.07%)</title><rect x="777.6" y="229" width="0.8" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="780.56" y="239.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (98,039,344 samples, 1.63%)</title><rect x="24.4" y="661" width="19.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="27.39" y="671.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (722,880 samples, 0.01%)</title><rect x="906.9" y="325" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="909.95" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (6,219,645 samples, 0.10%)</title><rect x="1049.5" y="405" width="1.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1052.48" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,368,701 samples, 0.02%)</title><rect x="737.1" y="373" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="740.09" y="383.5" ></text>
</g>
<g >
<title>testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (4,307,633,721 samples, 71.68%)</title><rect x="328.6" y="533" width="845.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="331.55" y="543.5" >testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt;</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,360,502 samples, 0.02%)</title><rect x="884.6" y="309" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="887.63" y="319.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (3,488,650 samples, 0.06%)</title><rect x="759.0" y="197" width="0.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="762.04" y="207.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (657,538 samples, 0.01%)</title><rect x="363.0" y="421" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="366.02" y="431.5" ></text>
</g>
<g >
<title>std::__copy_move_backward_a&lt;true, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (3,400,124 samples, 0.06%)</title><rect x="503.8" y="405" width="0.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="506.80" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt; (2,587,091 samples, 0.04%)</title><rect x="1093.9" y="405" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1096.88" y="415.5" ></text>
</g>
<g >
<title>[tests] (2,599,819 samples, 0.04%)</title><rect x="558.3" y="357" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="561.29" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,101,257 samples, 0.03%)</title><rect x="471.2" y="437" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="474.20" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (632,367 samples, 0.01%)</title><rect x="811.8" y="293" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="814.83" y="303.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,464,483 samples, 0.04%)</title><rect x="1056.3" y="389" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1059.31" y="399.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (15,791,981 samples, 0.26%)</title><rect x="788.6" y="309" width="3.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="791.59" y="319.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (3,986,688 samples, 0.07%)</title><rect x="545.9" y="373" width="0.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="548.85" y="383.5" ></text>
</g>
<g >
<title>testing::internal::StringStreamToString (920,595 samples, 0.02%)</title><rect x="1174.7" y="613" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1177.65" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1,464,202 samples, 0.02%)</title><rect x="1136.6" y="405" width="0.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1139.63" y="415.5" ></text>
</g>
<g >
<title>operator new (736,577 samples, 0.01%)</title><rect x="1100.3" y="469" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1103.25" y="479.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (3,320,795 samples, 0.06%)</title><rect x="940.4" y="373" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="943.36" y="383.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (631,962 samples, 0.01%)</title><rect x="762.5" y="85" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="765.45" y="95.5" ></text>
</g>
<g >
<title>testing::internal::Delete&lt;testing::TestSuite&gt; (679,871 samples, 0.01%)</title><rect x="1178.2" y="613" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1181.18" y="623.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (2,202,528 samples, 0.04%)</title><rect x="375.3" y="389" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="378.33" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2,747,792 samples, 0.05%)</title><rect x="340.6" y="421" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="343.64" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (654,924 samples, 0.01%)</title><rect x="1045.6" y="357" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1048.59" y="367.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (5,542,877 samples, 0.09%)</title><rect x="356.0" y="405" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="358.98" y="415.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (4,130,923 samples, 0.07%)</title><rect x="366.0" y="437" width="0.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="369.00" y="447.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (7,728,113 samples, 0.13%)</title><rect x="411.9" y="389" width="1.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="414.90" y="399.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,616,998 samples, 0.04%)</title><rect x="954.3" y="357" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="957.30" y="367.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (5,008,264 samples, 0.08%)</title><rect x="1164.0" y="341" width="1.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1166.99" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (2,732,096 samples, 0.05%)</title><rect x="1171.9" y="405" width="0.5" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1174.91" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (9,097,555 samples, 0.15%)</title><rect x="922.4" y="309" width="1.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="925.39" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (2,775,108 samples, 0.05%)</title><rect x="371.0" y="437" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="373.96" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3,481,818 samples, 0.06%)</title><rect x="939.5" y="341" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="942.55" y="351.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (1,316,903 samples, 0.02%)</title><rect x="774.7" y="117" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="777.67" y="127.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (13,599,250 samples, 0.23%)</title><rect x="625.6" y="373" width="2.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="628.58" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1,367,397 samples, 0.02%)</title><rect x="936.3" y="325" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="939.27" y="335.5" ></text>
</g>
<g >
<title>[tests] (1,465,632 samples, 0.02%)</title><rect x="1075.5" y="357" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1078.55" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (651,122 samples, 0.01%)</title><rect x="782.5" y="165" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="785.46" y="175.5" ></text>
</g>
<g >
<title>[unknown] (634,860 samples, 0.01%)</title><rect x="259.1" y="677" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="262.07" y="687.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (736,485 samples, 0.01%)</title><rect x="791.9" y="245" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="794.93" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,470,314 samples, 0.02%)</title><rect x="1139.4" y="421" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1142.41" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (25,341,885 samples, 0.42%)</title><rect x="601.6" y="389" width="5.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="604.63" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (634,235 samples, 0.01%)</title><rect x="339.3" y="405" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="342.33" y="415.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (2,107,710 samples, 0.04%)</title><rect x="487.7" y="405" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="490.71" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1,609,241 samples, 0.03%)</title><rect x="760.1" y="117" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="763.07" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3,144,771 samples, 0.05%)</title><rect x="502.3" y="373" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="505.27" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (674,745 samples, 0.01%)</title><rect x="1174.0" y="405" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1177.01" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,390,742 samples, 0.02%)</title><rect x="756.1" y="85" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="759.14" y="95.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,291,129 samples, 0.02%)</title><rect x="958.6" y="341" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="961.64" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_allocate (658,419 samples, 0.01%)</title><rect x="1151.9" y="469" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1154.88" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2,139,790 samples, 0.04%)</title><rect x="503.4" y="389" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="506.38" y="399.5" ></text>
</g>
<g >
<title>std::__copy_move_backward&lt;true, false, std::random_access_iterator_tag&gt;::__copy_move_b&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (737,016 samples, 0.01%)</title><rect x="503.8" y="373" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="506.80" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,359,315 samples, 0.02%)</title><rect x="746.7" y="101" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="749.67" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2,237,783 samples, 0.04%)</title><rect x="773.2" y="165" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="776.17" y="175.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Val_less_iter&gt; (736,256 samples, 0.01%)</title><rect x="741.2" y="437" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="744.20" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (656,262 samples, 0.01%)</title><rect x="751.8" y="101" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="754.78" y="111.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (1,391,385 samples, 0.02%)</title><rect x="695.7" y="373" width="0.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="698.72" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (124,507,124 samples, 2.07%)</title><rect x="909.1" y="325" width="24.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="912.11" y="335.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (1,399,138 samples, 0.02%)</title><rect x="1154.7" y="405" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1157.67" y="415.5" ></text>
</g>
<g >
<title>__tls_get_addr (679,508 samples, 0.01%)</title><rect x="994.6" y="357" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="997.63" y="367.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (736,842 samples, 0.01%)</title><rect x="601.5" y="389" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="604.49" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (7,213,578 samples, 0.12%)</title><rect x="994.0" y="389" width="1.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="996.99" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (720,357 samples, 0.01%)</title><rect x="504.1" y="309" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="507.09" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (34,921,083 samples, 0.58%)</title><rect x="481.3" y="437" width="6.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="484.27" y="447.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (737,404 samples, 0.01%)</title><rect x="478.8" y="421" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="481.83" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (736,752 samples, 0.01%)</title><rect x="789.4" y="261" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="792.44" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (728,453 samples, 0.01%)</title><rect x="759.6" y="117" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="762.59" y="127.5" ></text>
</g>
<g >
<title>std::operator&lt; (1,472,307 samples, 0.02%)</title><rect x="991.8" y="373" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="994.82" y="383.5" ></text>
</g>
<g >
<title>testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (4,309,024,300 samples, 71.70%)</title><rect x="328.6" y="629" width="846.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="331.55" y="639.5" >testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt;</text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (34,488,030 samples, 0.57%)</title><rect x="749.9" y="133" width="6.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="752.90" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (736,145 samples, 0.01%)</title><rect x="782.8" y="197" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="785.81" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,034,803 samples, 0.03%)</title><rect x="591.7" y="405" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="594.72" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (634,997 samples, 0.01%)</title><rect x="793.8" y="245" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="796.76" y="255.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (2,146,084 samples, 0.04%)</title><rect x="586.1" y="405" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="589.09" y="415.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (1,119,741 samples, 0.02%)</title><rect x="768.5" y="101" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="771.48" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (203,733,488 samples, 3.39%)</title><rect x="1002.9" y="389" width="40.0" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1005.88" y="399.5" >__g..</text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,857,418 samples, 0.03%)</title><rect x="794.8" y="325" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="797.82" y="335.5" ></text>
</g>
<g >
<title>[tests] (1,388,969 samples, 0.02%)</title><rect x="853.0" y="309" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="856.01" y="319.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (654,798 samples, 0.01%)</title><rect x="1045.3" y="405" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1048.27" y="415.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (2,129,375 samples, 0.04%)</title><rect x="606.2" y="373" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="609.19" y="383.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (737,361 samples, 0.01%)</title><rect x="995.5" y="357" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="998.53" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (721,906 samples, 0.01%)</title><rect x="759.0" y="133" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="762.04" y="143.5" ></text>
</g>
<g >
<title>[unknown] (23,556,353 samples, 0.39%)</title><rect x="649.5" y="389" width="4.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="652.51" y="399.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (25,686,853 samples, 0.43%)</title><rect x="259.2" y="709" width="5.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="262.19" y="719.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (1,579,814 samples, 0.03%)</title><rect x="776.3" y="149" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="779.25" y="159.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (1,451,480 samples, 0.02%)</title><rect x="1189.7" y="709" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1192.71" y="719.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (734,308 samples, 0.01%)</title><rect x="825.8" y="325" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="828.79" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (11,222,904 samples, 0.19%)</title><rect x="864.8" y="293" width="2.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="867.80" y="303.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (635,280 samples, 0.01%)</title><rect x="760.5" y="149" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="763.51" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (72,628,807 samples, 1.21%)</title><rect x="707.4" y="373" width="14.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="710.41" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4,190,143 samples, 0.07%)</title><rect x="818.3" y="261" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="821.29" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (647,473 samples, 0.01%)</title><rect x="747.9" y="69" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="750.88" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (736,964 samples, 0.01%)</title><rect x="800.4" y="277" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="803.37" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (4,797,638 samples, 0.08%)</title><rect x="803.5" y="325" width="1.0" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="806.54" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (67,081,731 samples, 1.12%)</title><rect x="1153.2" y="437" width="13.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1156.20" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (632,770 samples, 0.01%)</title><rect x="794.8" y="293" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="797.82" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2,616,867 samples, 0.04%)</title><rect x="418.2" y="405" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="421.18" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_val::operator (3,000,799 samples, 0.05%)</title><rect x="762.2" y="133" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="765.21" y="143.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (717,757 samples, 0.01%)</title><rect x="747.2" y="101" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="750.22" y="111.5" ></text>
</g>
<g >
<title>__asan_poison_stack_memory (661,848 samples, 0.01%)</title><rect x="1167.7" y="501" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1170.72" y="511.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (4,636,921 samples, 0.08%)</title><rect x="1010.8" y="373" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1013.81" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (637,728 samples, 0.01%)</title><rect x="338.2" y="437" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="341.17" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,895,467 samples, 0.08%)</title><rect x="520.6" y="405" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="523.63" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (737,195 samples, 0.01%)</title><rect x="831.8" y="309" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="834.84" y="319.5" ></text>
</g>
<g >
<title>std::__final_insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,254,170,165 samples, 20.87%)</title><rect x="495.2" y="453" width="246.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="498.17" y="463.5" >std::__final_insertion_sort&lt;__gn..</text>
</g>
<g >
<title>SortedUniqueVectoredList::insert (4,268,075,918 samples, 71.02%)</title><rect x="329.4" y="501" width="838.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="332.39" y="511.5" >SortedUniqueVectoredList::insert</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1,470,515 samples, 0.02%)</title><rect x="875.0" y="309" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="878.00" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (27,236,194 samples, 0.45%)</title><rect x="731.7" y="373" width="5.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="734.75" y="383.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (1,180,106 samples, 0.02%)</title><rect x="242.2" y="693" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="245.22" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (647,781 samples, 0.01%)</title><rect x="995.3" y="341" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="998.27" y="351.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::addBucket (12,126,456 samples, 0.20%)</title><rect x="10.1" y="693" width="2.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.14" y="703.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (4,097,189 samples, 0.07%)</title><rect x="1171.9" y="421" width="0.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1174.91" y="431.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (728,795 samples, 0.01%)</title><rect x="884.0" y="309" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="887.05" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (626,557 samples, 0.01%)</title><rect x="761.0" y="133" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="764.04" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (10,691,231 samples, 0.18%)</title><rect x="469.1" y="437" width="2.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="472.10" y="447.5" ></text>
</g>
<g >
<title>testing::internal::ForEach&lt;std::vector&lt;testing::TestSuite*, std::allocator&lt;testing::TestSuite*&gt; &gt;, void  (679,871 samples, 0.01%)</title><rect x="1178.2" y="645" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1181.18" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (736,351 samples, 0.01%)</title><rect x="495.9" y="421" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="498.89" y="431.5" ></text>
</g>
<g >
<title>[tests] (661,517 samples, 0.01%)</title><rect x="958.1" y="341" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="961.08" y="351.5" ></text>
</g>
<g >
<title>_dl_map_object (678,221 samples, 0.01%)</title><rect x="1189.2" y="709" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1192.18" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (9,059,214 samples, 0.15%)</title><rect x="775.4" y="197" width="1.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="778.43" y="207.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,141,074 samples, 0.02%)</title><rect x="1045.5" y="389" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1048.49" y="399.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (662,000 samples, 0.01%)</title><rect x="499.9" y="389" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="502.92" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,033,855 samples, 0.03%)</title><rect x="753.1" y="101" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="756.09" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (655,316 samples, 0.01%)</title><rect x="749.8" y="133" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="752.77" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1,929,170 samples, 0.03%)</title><rect x="411.5" y="389" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="414.52" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (12,620,006 samples, 0.21%)</title><rect x="526.2" y="405" width="2.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="529.16" y="415.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (6,742,293 samples, 0.11%)</title><rect x="773.6" y="213" width="1.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="776.61" y="223.5" ></text>
</g>
<g >
<title>[tests] (2,074,469 samples, 0.03%)</title><rect x="843.2" y="325" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="846.19" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (21,541,905 samples, 0.36%)</title><rect x="1180.4" y="709" width="4.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1183.42" y="719.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (736,778 samples, 0.01%)</title><rect x="487.3" y="373" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="490.28" y="383.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (240,270,596 samples, 4.00%)</title><rect x="744.5" y="325" width="47.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.51" y="335.5" >std:..</text>
</g>
<g >
<title>std::__niter_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (734,607 samples, 0.01%)</title><rect x="504.3" y="389" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="507.32" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (736,648 samples, 0.01%)</title><rect x="495.7" y="405" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="498.75" y="415.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (2,057,254 samples, 0.03%)</title><rect x="417.8" y="405" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="420.78" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt; (1,473,555 samples, 0.02%)</title><rect x="786.9" y="245" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="789.92" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (632,383 samples, 0.01%)</title><rect x="794.4" y="229" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="797.44" y="239.5" ></text>
</g>
<g >
<title>std::operator&lt; (17,987,896 samples, 0.30%)</title><rect x="541.7" y="389" width="3.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="544.67" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (6,742,599 samples, 0.11%)</title><rect x="590.2" y="405" width="1.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="593.15" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (736,319 samples, 0.01%)</title><rect x="885.0" y="309" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="888.04" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (2,100,165 samples, 0.03%)</title><rect x="880.9" y="373" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="883.90" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (2,115,697 samples, 0.04%)</title><rect x="993.0" y="405" width="0.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="996.03" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (2,116,565 samples, 0.04%)</title><rect x="680.0" y="389" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="682.98" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (662,162 samples, 0.01%)</title><rect x="777.4" y="149" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="780.43" y="159.5" ></text>
</g>
<g >
<title>__run_exit_handlers (679,871 samples, 0.01%)</title><rect x="1178.2" y="709" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.18" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (654,250 samples, 0.01%)</title><rect x="747.5" y="85" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="750.48" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (7,402,277 samples, 0.12%)</title><rect x="497.6" y="373" width="1.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="500.62" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator&lt;=&gt;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (731,341 samples, 0.01%)</title><rect x="989.3" y="373" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="992.29" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (668,663 samples, 0.01%)</title><rect x="785.0" y="229" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="787.96" y="239.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (683,920 samples, 0.01%)</title><rect x="1172.3" y="357" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1175.31" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (736,083 samples, 0.01%)</title><rect x="744.7" y="133" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="747.66" y="143.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (1,473,821 samples, 0.02%)</title><rect x="256.7" y="645" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="259.66" y="655.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (238,019,454 samples, 3.96%)</title><rect x="833.3" y="357" width="46.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="836.35" y="367.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2,783,502 samples, 0.05%)</title><rect x="1105.8" y="453" width="0.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1108.79" y="463.5" ></text>
</g>
<g >
<title>std::__copy_move_backward&lt;true, false, std::random_access_iterator_tag&gt;::__copy_move_b&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (683,481 samples, 0.01%)</title><rect x="1169.6" y="373" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1172.65" y="383.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (1,960,233 samples, 0.03%)</title><rect x="462.8" y="453" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="465.76" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator (725,042 samples, 0.01%)</title><rect x="824.7" y="309" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="827.69" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Val_less_iter::operator (2,141,999 samples, 0.04%)</title><rect x="509.5" y="421" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="512.51" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr (631,482 samples, 0.01%)</title><rect x="742.0" y="405" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="744.97" y="415.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (1,264,047 samples, 0.02%)</title><rect x="565.2" y="341" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="568.18" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (659,876 samples, 0.01%)</title><rect x="758.1" y="101" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="761.10" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (1,461,728 samples, 0.02%)</title><rect x="779.8" y="181" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="782.76" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (654,554 samples, 0.01%)</title><rect x="1152.2" y="453" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1155.16" y="463.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (7,638,988 samples, 0.13%)</title><rect x="130.6" y="677" width="1.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="133.64" y="687.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (736,734 samples, 0.01%)</title><rect x="1150.1" y="437" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1153.13" y="447.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (267,387,716 samples, 4.45%)</title><rect x="992.5" y="421" width="52.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="995.51" y="431.5" >std::..</text>
</g>
<g >
<title>std::__is_constant_evaluated (1,222,162 samples, 0.02%)</title><rect x="984.8" y="309" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="987.75" y="319.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (658,761 samples, 0.01%)</title><rect x="759.5" y="117" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="762.46" y="127.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (2,111,188 samples, 0.04%)</title><rect x="1046.6" y="405" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1049.63" y="415.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (737,242 samples, 0.01%)</title><rect x="264.5" y="709" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="267.50" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4,665,489 samples, 0.08%)</title><rect x="769.4" y="101" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="772.43" y="111.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,077,303 samples, 0.35%)</title><rect x="238.0" y="693" width="4.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="240.99" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (10,939,091 samples, 0.18%)</title><rect x="1000.7" y="389" width="2.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1003.73" y="399.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (1,394,920 samples, 0.02%)</title><rect x="881.3" y="373" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="884.31" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (732,522 samples, 0.01%)</title><rect x="549.8" y="373" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="552.77" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt; (16,134,850 samples, 0.27%)</title><rect x="1061.6" y="389" width="3.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1064.61" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,113,362 samples, 0.04%)</title><rect x="1106.3" y="453" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1109.34" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (735,915 samples, 0.01%)</title><rect x="775.2" y="197" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="778.16" y="207.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (2,757,988 samples, 0.05%)</title><rect x="577.5" y="341" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="580.47" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (1,370,496 samples, 0.02%)</title><rect x="880.1" y="373" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="883.08" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (6,351,479 samples, 0.11%)</title><rect x="406.3" y="405" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="409.30" y="415.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,945,535 samples, 0.05%)</title><rect x="384.3" y="437" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="387.33" y="447.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (630,046 samples, 0.01%)</title><rect x="416.7" y="373" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="419.68" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (661,883 samples, 0.01%)</title><rect x="781.3" y="197" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="784.29" y="207.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (194,294,751 samples, 3.23%)</title><rect x="744.7" y="261" width="38.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.66" y="271.5" >std..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (680,428 samples, 0.01%)</title><rect x="43.9" y="661" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="46.90" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (117,644,667 samples, 1.96%)</title><rect x="395.6" y="421" width="23.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="398.60" y="431.5" >s..</text>
</g>
<g >
<title>testing::internal::UnitTestImpl::~UnitTestImpl (679,871 samples, 0.01%)</title><rect x="1178.2" y="661" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1181.18" y="671.5" ></text>
</g>
<g >
<title>std::operator&lt; (681,530 samples, 0.01%)</title><rect x="1172.6" y="405" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1175.58" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (728,929 samples, 0.01%)</title><rect x="495.2" y="437" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="498.17" y="447.5" ></text>
</g>
<g >
<title>[tests] (658,828 samples, 0.01%)</title><rect x="749.9" y="117" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="752.90" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (634,719 samples, 0.01%)</title><rect x="793.3" y="261" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="796.31" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (626,604 samples, 0.01%)</title><rect x="788.0" y="213" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="791.03" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (732,019 samples, 0.01%)</title><rect x="791.0" y="245" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="793.99" y="255.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (736,049 samples, 0.01%)</title><rect x="881.7" y="341" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="884.73" y="351.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (6,681,975 samples, 0.11%)</title><rect x="480.0" y="405" width="1.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="482.95" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3,339,071 samples, 0.06%)</title><rect x="339.2" y="421" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="342.18" y="431.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (3,424,716 samples, 0.06%)</title><rect x="446.7" y="373" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="449.72" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,938,512 samples, 0.03%)</title><rect x="624.8" y="373" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="627.77" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,813,305 samples, 0.05%)</title><rect x="680.4" y="389" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="683.40" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (678,034 samples, 0.01%)</title><rect x="1172.7" y="389" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1175.71" y="399.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,639,720 samples, 0.04%)</title><rect x="940.5" y="357" width="0.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="943.49" y="367.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (46,604,598 samples, 0.78%)</title><rect x="495.3" y="437" width="9.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="498.32" y="447.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (154,173,631 samples, 2.57%)</title><rect x="744.7" y="229" width="30.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.66" y="239.5" >st..</text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (1,472,966 samples, 0.02%)</title><rect x="739.7" y="405" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="742.74" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2,038,689 samples, 0.03%)</title><rect x="759.3" y="133" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="762.33" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (3,466,977 samples, 0.06%)</title><rect x="586.5" y="405" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="589.51" y="415.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::addBucket (679,015 samples, 0.01%)</title><rect x="328.6" y="485" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="331.55" y="495.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (2,570,155 samples, 0.04%)</title><rect x="264.6" y="709" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="267.64" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (6,973,253 samples, 0.12%)</title><rect x="867.4" y="277" width="1.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="870.42" y="287.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (247,178,108 samples, 4.11%)</title><rect x="1046.1" y="421" width="48.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1049.11" y="431.5" >std:..</text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (1,223,087 samples, 0.02%)</title><rect x="1092.1" y="373" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1095.14" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,352,353 samples, 0.02%)</title><rect x="490.4" y="453" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="493.41" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (30,560,602 samples, 0.51%)</title><rect x="442.2" y="437" width="6.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="445.22" y="447.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (729,930 samples, 0.01%)</title><rect x="780.6" y="229" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="783.62" y="239.5" ></text>
</g>
<g >
<title>__tls_get_addr (737,244 samples, 0.01%)</title><rect x="831.7" y="309" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="834.70" y="319.5" ></text>
</g>
<g >
<title>mmap64 (612,919 samples, 0.01%)</title><rect x="1189.6" y="709" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1192.59" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (656,609 samples, 0.01%)</title><rect x="752.3" y="101" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="755.30" y="111.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (5,347,599 samples, 0.09%)</title><rect x="773.9" y="197" width="1.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="776.88" y="207.5" ></text>
</g>
<g >
<title>[tests] (664,591 samples, 0.01%)</title><rect x="382.7" y="437" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="385.67" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (19,006,657 samples, 0.32%)</title><rect x="950.6" y="357" width="3.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="953.57" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5,546,269 samples, 0.09%)</title><rect x="1080.3" y="341" width="1.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1083.28" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (2,348,974 samples, 0.04%)</title><rect x="506.5" y="421" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="509.48" y="431.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,024,459 samples, 0.03%)</title><rect x="992.1" y="373" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="995.11" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1,875,301 samples, 0.03%)</title><rect x="502.9" y="389" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="505.89" y="399.5" ></text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (662,425 samples, 0.01%)</title><rect x="1140.7" y="389" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1143.74" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (2,211,028 samples, 0.04%)</title><rect x="1179.0" y="709" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1181.99" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (11,778,526 samples, 0.20%)</title><rect x="572.5" y="357" width="2.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="575.53" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator-- (3,181,549 samples, 0.05%)</title><rect x="508.9" y="421" width="0.6" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="511.88" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (920,595 samples, 0.02%)</title><rect x="1174.7" y="581" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1177.65" y="591.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (3,415,904 samples, 0.06%)</title><rect x="340.0" y="389" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="342.97" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (632,660 samples, 0.01%)</title><rect x="776.6" y="149" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="779.56" y="159.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (629,459 samples, 0.01%)</title><rect x="342.0" y="453" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="344.96" y="463.5" ></text>
</g>
<g >
<title>std::__pop_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (6,771,131 samples, 0.11%)</title><rect x="1170.6" y="405" width="1.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1173.58" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (736,485 samples, 0.01%)</title><rect x="791.9" y="261" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="794.93" y="271.5" ></text>
</g>
<g >
<title>std::array&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 10ul&gt;::operator[] (17,148,024 samples, 0.29%)</title><rect x="491.1" y="485" width="3.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="494.09" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,119,741 samples, 0.02%)</title><rect x="768.5" y="133" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="771.48" y="143.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (11,909,067 samples, 0.20%)</title><rect x="789.1" y="277" width="2.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="792.08" y="287.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (1,314,360 samples, 0.02%)</title><rect x="981.4" y="325" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="984.40" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (736,837 samples, 0.01%)</title><rect x="801.3" y="277" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="804.33" y="287.5" ></text>
</g>
<g >
<title>[unknown] (737,902 samples, 0.01%)</title><rect x="501.2" y="389" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="504.16" y="399.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::addBucket (238,770,082 samples, 3.97%)</title><rect x="378.6" y="485" width="46.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="381.55" y="495.5" >Sort..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1,119,741 samples, 0.02%)</title><rect x="768.5" y="117" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="771.48" y="127.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (736,399 samples, 0.01%)</title><rect x="737.9" y="405" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="740.93" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (674,690 samples, 0.01%)</title><rect x="1169.9" y="421" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1172.91" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (6,252,291 samples, 0.10%)</title><rect x="1128.9" y="421" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1131.90" y="431.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::Iterator::operator!= (3,548,570 samples, 0.06%)</title><rect x="377.1" y="485" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="380.08" y="495.5" ></text>
</g>
<g >
<title>std::__sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (16,973,226 samples, 0.28%)</title><rect x="1169.6" y="485" width="3.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1172.65" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (23,944,396 samples, 0.40%)</title><rect x="717.0" y="357" width="4.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="719.97" y="367.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (2,130,862 samples, 0.04%)</title><rect x="815.6" y="277" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="818.59" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (634,803 samples, 0.01%)</title><rect x="756.0" y="85" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="759.02" y="95.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4,808,867 samples, 0.08%)</title><rect x="863.9" y="277" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="866.86" y="287.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (660,306 samples, 0.01%)</title><rect x="737.0" y="357" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="739.96" y="367.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (252,777,457 samples, 4.21%)</title><rect x="1045.0" y="437" width="49.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1048.01" y="447.5" >std::..</text>
</g>
<g >
<title>[unknown] (29,170,818 samples, 0.49%)</title><rect x="18.7" y="661" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="21.66" y="671.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (7,196,913 samples, 0.12%)</title><rect x="784.6" y="261" width="1.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="787.64" y="271.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (635,598 samples, 0.01%)</title><rect x="831.4" y="309" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="834.43" y="319.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1,473,739 samples, 0.02%)</title><rect x="678.9" y="357" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="681.86" y="367.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (2,035,224 samples, 0.03%)</title><rect x="694.8" y="373" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="697.79" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (651,945 samples, 0.01%)</title><rect x="1168.5" y="469" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1171.45" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (8,912,786 samples, 0.15%)</title><rect x="628.2" y="389" width="1.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="631.25" y="399.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (2,804,922 samples, 0.05%)</title><rect x="1065.8" y="373" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1068.76" y="383.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (143,719,060 samples, 2.39%)</title><rect x="797.7" y="357" width="28.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="800.72" y="367.5" >s..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (5,778,011 samples, 0.10%)</title><rect x="998.3" y="389" width="1.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1001.35" y="399.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (2,744,632 samples, 0.05%)</title><rect x="613.6" y="357" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="616.58" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (215,536,342 samples, 3.59%)</title><rect x="593.7" y="405" width="42.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="596.69" y="415.5" >std..</text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (2,870,692 samples, 0.05%)</title><rect x="822.5" y="277" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="825.48" y="287.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (1,396,271 samples, 0.02%)</title><rect x="825.2" y="325" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="828.25" y="335.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1,351,459 samples, 0.02%)</title><rect x="752.8" y="53" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="755.83" y="63.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,380,010 samples, 0.02%)</title><rect x="467.7" y="437" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="470.74" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,309,056 samples, 0.02%)</title><rect x="481.8" y="421" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="484.79" y="431.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (620,905 samples, 0.01%)</title><rect x="992.5" y="405" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="995.51" y="415.5" ></text>
</g>
<g >
<title>operator new (735,364 samples, 0.01%)</title><rect x="425.3" y="469" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="428.29" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (5,697,309 samples, 0.09%)</title><rect x="728.2" y="405" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="731.20" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2,963,526 samples, 0.05%)</title><rect x="783.7" y="197" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="786.67" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (198,440,653 samples, 3.30%)</title><rect x="385.9" y="437" width="39.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="388.90" y="447.5" >std..</text>
</g>
<g >
<title>__asan::GetFakeStackFast (2,776,672 samples, 0.05%)</title><rect x="1008.3" y="373" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1011.27" y="383.5" ></text>
</g>
<g >
<title>std::__copy_move_backward_a2&lt;true, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1,928,501 samples, 0.03%)</title><rect x="503.9" y="373" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="506.95" y="383.5" ></text>
</g>
<g >
<title>std::__cmp_cat::__unspec::__unspec (2,721,888 samples, 0.05%)</title><rect x="1093.3" y="405" width="0.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1096.35" y="415.5" ></text>
</g>
<g >
<title>__tls_get_addr (4,858,554 samples, 0.08%)</title><rect x="900.0" y="341" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="903.05" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (10,919,895 samples, 0.18%)</title><rect x="689.4" y="373" width="2.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="692.36" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (675,550 samples, 0.01%)</title><rect x="1170.4" y="373" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1173.45" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (5,530,739 samples, 0.09%)</title><rect x="907.7" y="325" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="910.75" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (971,485 samples, 0.02%)</title><rect x="777.6" y="181" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="780.56" y="191.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (684,337 samples, 0.01%)</title><rect x="1170.3" y="373" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1173.31" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (1,394,694 samples, 0.02%)</title><rect x="773.6" y="149" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="776.61" y="159.5" ></text>
</g>
<g >
<title>std::sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (16,973,226 samples, 0.28%)</title><rect x="1169.6" y="501" width="3.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1172.65" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5,362,568 samples, 0.09%)</title><rect x="994.3" y="373" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="997.35" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (672,782 samples, 0.01%)</title><rect x="1170.7" y="357" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1173.71" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,187,347 samples, 0.02%)</title><rect x="502.5" y="357" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="505.51" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (678,034 samples, 0.01%)</title><rect x="1172.7" y="421" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1175.71" y="431.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::addBucket (705,525 samples, 0.01%)</title><rect x="329.3" y="501" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="332.25" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (733,350 samples, 0.01%)</title><rect x="340.6" y="389" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="343.64" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (640,423 samples, 0.01%)</title><rect x="788.8" y="245" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="791.83" y="255.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (608,336 samples, 0.01%)</title><rect x="806.8" y="309" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="809.75" y="319.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (73,265,730 samples, 1.22%)</title><rect x="744.7" y="197" width="14.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.66" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (683,015 samples, 0.01%)</title><rect x="1171.4" y="357" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1174.38" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (5,253,485 samples, 0.09%)</title><rect x="611.3" y="373" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="614.26" y="383.5" ></text>
</g>
<g >
<title>__tls_get_addr (4,010,619 samples, 0.07%)</title><rect x="705.0" y="373" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="707.99" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (1,363,115 samples, 0.02%)</title><rect x="955.6" y="357" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="958.63" y="367.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (2,202,340 samples, 0.04%)</title><rect x="1166.8" y="453" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1169.77" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (33,699,674 samples, 0.56%)</title><rect x="1158.5" y="373" width="6.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1161.50" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (43,716,494 samples, 0.73%)</title><rect x="357.4" y="437" width="8.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="360.42" y="447.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (736,692 samples, 0.01%)</title><rect x="354.0" y="421" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="356.99" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (736,922 samples, 0.01%)</title><rect x="1169.5" y="485" width="0.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1172.50" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (669,259 samples, 0.01%)</title><rect x="1170.8" y="325" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1173.84" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::internal_close (678,536 samples, 0.01%)</title><rect x="1184.8" y="709" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1187.80" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (734,843 samples, 0.01%)</title><rect x="993.8" y="389" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="996.84" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (736,254 samples, 0.01%)</title><rect x="1184.7" y="709" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1187.65" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (2,744,800 samples, 0.05%)</title><rect x="1105.3" y="453" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1108.26" y="463.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,446,074 samples, 0.02%)</title><rect x="425.0" y="469" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="428.01" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (721,291 samples, 0.01%)</title><rect x="749.5" y="133" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="752.50" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (6,135,840 samples, 0.10%)</title><rect x="488.1" y="437" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="491.12" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (4,967,413 samples, 0.08%)</title><rect x="507.9" y="421" width="1.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="510.91" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (683,481 samples, 0.01%)</title><rect x="1169.6" y="341" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1172.65" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (3,258,944 samples, 0.05%)</title><rect x="936.5" y="325" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="939.54" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (717,566 samples, 0.01%)</title><rect x="741.6" y="437" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="744.57" y="447.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,782,436 samples, 0.05%)</title><rect x="989.4" y="373" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="992.43" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (2,065,986 samples, 0.03%)</title><rect x="540.4" y="389" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="543.38" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (5,351,988 samples, 0.09%)</title><rect x="368.9" y="453" width="1.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="371.86" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (5,676,927 samples, 0.09%)</title><rect x="706.3" y="373" width="1.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="709.30" y="383.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (736,607 samples, 0.01%)</title><rect x="743.7" y="373" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="746.69" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (2,935,222 samples, 0.05%)</title><rect x="876.0" y="309" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="878.96" y="319.5" ></text>
</g>
<g >
<title>__tls_get_addr (655,181 samples, 0.01%)</title><rect x="755.6" y="101" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="758.63" y="111.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,094,458 samples, 0.03%)</title><rect x="899.6" y="341" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="902.63" y="351.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (16,199,926 samples, 0.27%)</title><rect x="917.4" y="293" width="3.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="920.39" y="303.5" ></text>
</g>
<g >
<title>__tls_get_addr (736,908 samples, 0.01%)</title><rect x="788.7" y="261" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="791.69" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (627,847 samples, 0.01%)</title><rect x="773.4" y="133" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="776.39" y="143.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (654,166 samples, 0.01%)</title><rect x="810.7" y="293" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="813.72" y="303.5" ></text>
</g>
<g >
<title>tests (6,009,515,444 samples, 100.00%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >tests</text>
</g>
<g >
<title>__asan::GetFakeStackFast (624,869 samples, 0.01%)</title><rect x="402.4" y="405" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="405.35" y="415.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (659,510 samples, 0.01%)</title><rect x="797.6" y="293" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="800.59" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,632,532 samples, 0.04%)</title><rect x="705.8" y="373" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="708.78" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1,838,819 samples, 0.03%)</title><rect x="255.5" y="693" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="258.54" y="703.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (33,795,917 samples, 0.56%)</title><rect x="915.7" y="309" width="6.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="918.75" y="319.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (248,668,855 samples, 4.14%)</title><rect x="996.2" y="405" width="48.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="999.18" y="415.5" >std:..</text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (1,377,331 samples, 0.02%)</title><rect x="788.7" y="293" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="791.69" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (16,990,748 samples, 0.28%)</title><rect x="981.7" y="325" width="3.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="984.65" y="335.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (735,461 samples, 0.01%)</title><rect x="995.1" y="325" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="998.13" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator+ (655,047 samples, 0.01%)</title><rect x="1045.1" y="421" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1048.14" y="431.5" ></text>
</g>
<g >
<title>PoisonAlignedStackMemory (671,985 samples, 0.01%)</title><rect x="14.0" y="677" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="17.00" y="687.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1,394,694 samples, 0.02%)</title><rect x="773.6" y="181" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="776.61" y="191.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (626,248 samples, 0.01%)</title><rect x="1180.3" y="709" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1183.30" y="719.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (661,058 samples, 0.01%)</title><rect x="742.5" y="373" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="745.49" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (631,082 samples, 0.01%)</title><rect x="995.8" y="357" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="998.80" y="367.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12,045,859 samples, 0.20%)</title><rect x="829.1" y="325" width="2.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="832.07" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,087,119 samples, 0.03%)</title><rect x="768.1" y="133" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="771.07" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,119,108 samples, 0.02%)</title><rect x="767.3" y="133" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="770.32" y="143.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (16,085,363 samples, 0.27%)</title><rect x="970.2" y="309" width="3.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="973.17" y="319.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (699,431,061 samples, 11.64%)</title><rect x="742.7" y="389" width="137.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="745.75" y="399.5" >std::__introsort_..</text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1,355,636 samples, 0.02%)</title><rect x="447.1" y="357" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="450.12" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (625,813 samples, 0.01%)</title><rect x="792.2" y="293" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="795.20" y="303.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (7,644,190 samples, 0.13%)</title><rect x="677.4" y="325" width="1.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="680.36" y="335.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (920,595 samples, 0.02%)</title><rect x="1174.7" y="677" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1177.65" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1,469,241 samples, 0.02%)</title><rect x="428.4" y="469" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="431.40" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (658,230 samples, 0.01%)</title><rect x="497.3" y="373" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="500.35" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (9,700,621 samples, 0.16%)</title><rect x="536.9" y="389" width="1.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="539.86" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (2,754,891 samples, 0.05%)</title><rect x="362.5" y="421" width="0.5" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="365.48" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (4,664,867 samples, 0.08%)</title><rect x="373.5" y="405" width="0.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="376.49" y="415.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (715,257 samples, 0.01%)</title><rect x="237.6" y="693" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="240.61" y="703.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (661,163 samples, 0.01%)</title><rect x="749.6" y="149" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="752.64" y="159.5" ></text>
</g>
<g >
<title>std::operator&lt; (657,575 samples, 0.01%)</title><rect x="781.4" y="197" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="784.42" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (15,906,823 samples, 0.26%)</title><rect x="338.3" y="437" width="3.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="341.29" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (12,999,402 samples, 0.22%)</title><rect x="500.8" y="405" width="2.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="503.83" y="415.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (674,745 samples, 0.01%)</title><rect x="1174.0" y="469" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1177.01" y="479.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (17,943,926 samples, 0.30%)</title><rect x="1185.1" y="709" width="3.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1188.11" y="719.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (3,526,076 samples, 0.06%)</title><rect x="486.9" y="389" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="489.87" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1,422,475 samples, 0.02%)</title><rect x="385.5" y="437" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="388.47" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,885,276 samples, 0.03%)</title><rect x="501.5" y="389" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="504.55" y="399.5" ></text>
</g>
<g >
<title>std::__unguarded_partition&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (261,602,581 samples, 4.35%)</title><rect x="941.1" y="389" width="51.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="944.14" y="399.5" >std::..</text>
</g>
<g >
<title>__asan::GetFakeStackFast (736,284 samples, 0.01%)</title><rect x="744.0" y="357" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="746.98" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (2,070,124 samples, 0.03%)</title><rect x="1150.3" y="453" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1153.28" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (632,975 samples, 0.01%)</title><rect x="995.9" y="341" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="998.92" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6,023,474 samples, 0.10%)</title><rect x="771.4" y="165" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="774.38" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (1,141,600 samples, 0.02%)</title><rect x="774.9" y="197" width="0.3" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="777.93" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (76,608,858 samples, 1.27%)</title><rect x="1152.2" y="469" width="15.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1155.16" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,186,197 samples, 0.07%)</title><rect x="834.0" y="341" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="837.05" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (4,064,669 samples, 0.07%)</title><rect x="901.7" y="341" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="904.70" y="351.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5,254,263 samples, 0.09%)</title><rect x="787.2" y="245" width="1.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="790.21" y="255.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (1,385,741 samples, 0.02%)</title><rect x="791.4" y="277" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="794.42" y="287.5" ></text>
</g>
<g >
<title>testing::internal::MakeAndRegisterTestInfo (919,530 samples, 0.02%)</title><rect x="1174.8" y="661" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1177.83" y="671.5" ></text>
</g>
<g >
<title>std::move_backward&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (683,481 samples, 0.01%)</title><rect x="1169.6" y="437" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1172.65" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,276,227 samples, 0.05%)</title><rect x="949.9" y="357" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="952.93" y="367.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (634,206 samples, 0.01%)</title><rect x="499.3" y="405" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="502.34" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (1,474,024 samples, 0.02%)</title><rect x="823.7" y="293" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="826.72" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (675,550 samples, 0.01%)</title><rect x="1170.4" y="325" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1173.45" y="335.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (659,498 samples, 0.01%)</title><rect x="751.3" y="69" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="754.25" y="79.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::insert (679,015 samples, 0.01%)</title><rect x="328.6" y="501" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="331.55" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (626,604 samples, 0.01%)</title><rect x="788.0" y="197" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="791.03" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (670,622 samples, 0.01%)</title><rect x="1171.2" y="357" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1174.24" y="367.5" ></text>
</g>
<g >
<title>std::__partial_sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (70,676,958 samples, 1.18%)</title><rect x="759.7" y="213" width="13.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="762.73" y="223.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (736,019 samples, 0.01%)</title><rect x="922.2" y="293" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="925.24" y="303.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::contains (76,483,688 samples, 1.27%)</title><rect x="425.4" y="485" width="15.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="428.43" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (24,886,730 samples, 0.41%)</title><rect x="371.5" y="437" width="4.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="374.50" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (8,434,723 samples, 0.14%)</title><rect x="882.5" y="325" width="1.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="885.54" y="335.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (23,056,676 samples, 0.38%)</title><rect x="14.1" y="677" width="4.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="17.13" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2,139,790 samples, 0.04%)</title><rect x="503.4" y="405" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="506.38" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (657,497 samples, 0.01%)</title><rect x="500.3" y="373" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="503.34" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1,332,916 samples, 0.02%)</title><rect x="744.1" y="357" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="747.13" y="367.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (1,849,541 samples, 0.03%)</title><rect x="655.4" y="389" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="658.42" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (736,680 samples, 0.01%)</title><rect x="338.0" y="437" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="341.02" y="447.5" ></text>
</g>
<g >
<title>__tls_get_addr (1,347,394 samples, 0.02%)</title><rect x="499.1" y="405" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="502.07" y="415.5" ></text>
</g>
<g >
<title>__tls_get_addr (3,262,965 samples, 0.05%)</title><rect x="655.8" y="389" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="658.78" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,077,693 samples, 0.03%)</title><rect x="371.7" y="421" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="374.74" y="431.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_val&gt; (11,568,560 samples, 0.19%)</title><rect x="769.1" y="149" width="2.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="772.11" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (7,569,853 samples, 0.13%)</title><rect x="1081.9" y="357" width="1.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1084.91" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (734,725 samples, 0.01%)</title><rect x="341.3" y="421" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="344.27" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr (736,936 samples, 0.01%)</title><rect x="829.5" y="309" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="832.48" y="319.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (6,053,962 samples, 0.10%)</title><rect x="619.9" y="357" width="1.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="622.93" y="367.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (79,393,801 samples, 1.32%)</title><rect x="84.3" y="677" width="15.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="87.34" y="687.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (661,752 samples, 0.01%)</title><rect x="753.2" y="85" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="756.23" y="95.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (736,242 samples, 0.01%)</title><rect x="824.0" y="293" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="827.01" y="303.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (4,097,189 samples, 0.07%)</title><rect x="1171.9" y="437" width="0.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1174.91" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (1,386,062 samples, 0.02%)</title><rect x="754.3" y="85" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="757.28" y="95.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::Iterator::operator* (1,361,832 samples, 0.02%)</title><rect x="427.7" y="469" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="430.73" y="479.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_val&gt; (6,840,826 samples, 0.11%)</title><rect x="761.8" y="149" width="1.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="764.82" y="159.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (683,481 samples, 0.01%)</title><rect x="1169.6" y="453" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1172.65" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (55,245,990 samples, 0.92%)</title><rect x="244.5" y="693" width="10.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="247.48" y="703.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (25,379,914 samples, 0.42%)</title><rect x="744.7" y="149" width="4.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="747.66" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (1,395,060 samples, 0.02%)</title><rect x="1151.9" y="485" width="0.3" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1154.88" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (5,610,674 samples, 0.09%)</title><rect x="939.3" y="373" width="1.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="942.26" y="383.5" ></text>
</g>
<g >
<title>[tests] (652,439 samples, 0.01%)</title><rect x="337.9" y="437" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="340.90" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (1,386,472 samples, 0.02%)</title><rect x="940.5" y="341" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="943.49" y="351.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (1,120,787 samples, 0.02%)</title><rect x="702.7" y="357" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="705.74" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1,367,185 samples, 0.02%)</title><rect x="1172.2" y="373" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1175.18" y="383.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (1,820,254 samples, 0.03%)</title><rect x="783.7" y="181" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="786.67" y="191.5" ></text>
</g>
<g >
<title>[tests] (737,252 samples, 0.01%)</title><rect x="519.9" y="405" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="522.88" y="415.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (659,876 samples, 0.01%)</title><rect x="758.1" y="85" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="761.10" y="95.5" ></text>
</g>
<g >
<title>__ubsan::checkDynamicType (1,398,889 samples, 0.02%)</title><rect x="1188.9" y="709" width="0.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1191.90" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (731,117 samples, 0.01%)</title><rect x="793.9" y="229" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="796.88" y="239.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (737,360 samples, 0.01%)</title><rect x="784.4" y="229" width="0.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="787.35" y="239.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (627,710 samples, 0.01%)</title><rect x="794.6" y="293" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="797.56" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,964,086 samples, 0.03%)</title><rect x="753.8" y="85" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="756.76" y="95.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (4,973,265 samples, 0.08%)</title><rect x="416.8" y="373" width="1.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="419.80" y="383.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (1,398,529 samples, 0.02%)</title><rect x="807.6" y="309" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="810.56" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (4,238,690 samples, 0.07%)</title><rect x="1165.5" y="389" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1168.54" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (674,745 samples, 0.01%)</title><rect x="1174.0" y="421" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1177.01" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~_Vector_base (1,294,072 samples, 0.02%)</title><rect x="1167.2" y="469" width="0.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1170.20" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (661,761 samples, 0.01%)</title><rect x="385.3" y="437" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="388.34" y="447.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char&gt; (2,853,686 samples, 0.05%)</title><rect x="356.5" y="389" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="359.51" y="399.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (720,896 samples, 0.01%)</title><rect x="776.8" y="149" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="779.78" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (662,198 samples, 0.01%)</title><rect x="878.4" y="293" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="881.43" y="303.5" ></text>
</g>
<g >
<title>[tests] (2,090,502 samples, 0.03%)</title><rect x="1025.6" y="341" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1028.61" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (657,262 samples, 0.01%)</title><rect x="1013.1" y="373" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1016.10" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (2,644,458 samples, 0.04%)</title><rect x="742.1" y="389" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="745.10" y="399.5" ></text>
</g>
<g >
<title>std::__introsort_loop&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_iter&gt; (271,591,257 samples, 4.52%)</title><rect x="744.4" y="357" width="53.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="747.39" y="367.5" >std::..</text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,125,517 samples, 0.04%)</title><rect x="392.9" y="421" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="395.89" y="431.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (730,141 samples, 0.01%)</title><rect x="758.0" y="117" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="760.96" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (6,518,023 samples, 0.11%)</title><rect x="437.0" y="437" width="1.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="439.97" y="447.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,278,312 samples, 0.02%)</title><rect x="788.3" y="261" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="791.34" y="271.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (1,224,128 samples, 0.02%)</title><rect x="1088.9" y="341" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1091.90" y="351.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (736,741 samples, 0.01%)</title><rect x="828.4" y="325" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="831.39" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (4,590,571 samples, 0.08%)</title><rect x="1048.6" y="405" width="0.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1051.58" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,399,334 samples, 0.02%)</title><rect x="1126.0" y="421" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1129.01" y="431.5" ></text>
</g>
<g >
<title>__tls_get_addr (1,222,970 samples, 0.02%)</title><rect x="337.4" y="453" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="340.39" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (1,397,027 samples, 0.02%)</title><rect x="1061.3" y="389" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1064.33" y="399.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3,449,085 samples, 0.06%)</title><rect x="783.7" y="213" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="786.67" y="223.5" ></text>
</g>
<g >
<title>__tls_get_addr (3,383,469 samples, 0.06%)</title><rect x="459.6" y="469" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="462.60" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (672,557 samples, 0.01%)</title><rect x="1170.0" y="421" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1173.05" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (5,729,483 samples, 0.10%)</title><rect x="580.5" y="373" width="1.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="583.45" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (661,720 samples, 0.01%)</title><rect x="746.3" y="117" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="749.29" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector (737,328 samples, 0.01%)</title><rect x="1173.7" y="501" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1176.72" y="511.5" ></text>
</g>
<g >
<title>__tls_get_addr (627,445 samples, 0.01%)</title><rect x="1126.4" y="421" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1129.43" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (736,527 samples, 0.01%)</title><rect x="831.3" y="309" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="834.29" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (652,985 samples, 0.01%)</title><rect x="757.3" y="117" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="760.31" y="127.5" ></text>
</g>
<g >
<title>[unknown] (1,268,350,069 samples, 21.11%)</title><rect x="10.1" y="709" width="249.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.14" y="719.5" >[unknown]</text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (736,406 samples, 0.01%)</title><rect x="800.6" y="293" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="803.64" y="303.5" ></text>
</g>
<g >
<title>[tests] (736,421 samples, 0.01%)</title><rect x="416.4" y="373" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="419.40" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::internal_read (920,559 samples, 0.02%)</title><rect x="257.2" y="693" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="260.15" y="703.5" ></text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (15,431,197 samples, 0.26%)</title><rect x="794.7" y="341" width="3.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="797.69" y="351.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (195,619,023 samples, 3.26%)</title><rect x="545.2" y="389" width="38.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="548.20" y="399.5" >std..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (29,170,818 samples, 0.49%)</title><rect x="18.7" y="645" width="5.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="21.66" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::__normal_iterator (658,801 samples, 0.01%)</title><rect x="794.7" y="309" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="797.69" y="319.5" ></text>
</g>
<g >
<title>testing::internal::EqHelper::Compare&lt;unsigned long, unsigned long,  (736,370 samples, 0.01%)</title><rect x="1174.1" y="501" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1177.14" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (270,193,410 samples, 4.50%)</title><rect x="265.7" y="709" width="53.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="268.68" y="719.5" >__asa..</text>
</g>
<g >
<title>[tests] (1,447,034 samples, 0.02%)</title><rect x="649.2" y="389" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="652.22" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Synth3way::operator (731,341 samples, 0.01%)</title><rect x="989.3" y="357" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="992.29" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3,265,667 samples, 0.05%)</title><rect x="1151.2" y="469" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1154.24" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (2,730,594 samples, 0.05%)</title><rect x="419.7" y="421" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="422.74" y="431.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredListTests_pushingManyElements_expectedAllOfThemInContainerAndNothingBadhappen_Test::TestBody (4,304,069,508 samples, 71.62%)</title><rect x="329.2" y="517" width="845.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="332.16" y="527.5" >SortedUniqueVectoredListTests_pushingManyElements_expectedAllOfThemInContainerAndNothingBadhappen_Test::TestBody</text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (4,282,524 samples, 0.07%)</title><rect x="1045.3" y="421" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1048.27" y="431.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1,318,541 samples, 0.02%)</title><rect x="753.9" y="69" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="756.89" y="79.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (737,293 samples, 0.01%)</title><rect x="830.7" y="277" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="833.74" y="287.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (737,360 samples, 0.01%)</title><rect x="784.4" y="213" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="787.35" y="223.5" ></text>
</g>
<g >
<title>[unknown] (1,357,018 samples, 0.02%)</title><rect x="130.1" y="661" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="133.08" y="671.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (729,930 samples, 0.01%)</title><rect x="780.6" y="213" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="783.62" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (9,874,779 samples, 0.16%)</title><rect x="438.2" y="453" width="2.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="441.25" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2,433,484 samples, 0.04%)</title><rect x="777.8" y="197" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="780.85" y="207.5" ></text>
</g>
<g >
<title>[tests] (2,104,188 samples, 0.04%)</title><rect x="968.4" y="325" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="971.38" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2,808,159 samples, 0.05%)</title><rect x="987.1" y="341" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="990.15" y="351.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (635,143 samples, 0.01%)</title><rect x="763.0" y="85" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="766.04" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (11,784,077 samples, 0.20%)</title><rect x="926.4" y="309" width="2.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="929.36" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (655,131 samples, 0.01%)</title><rect x="774.9" y="181" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="777.93" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__ops::_Iter_less_iter::operator (13,266,872 samples, 0.22%)</title><rect x="881.6" y="357" width="2.6" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="884.59" y="367.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (735,558 samples, 0.01%)</title><rect x="422.5" y="405" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="425.47" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (30,936,283 samples, 0.51%)</title><rect x="482.0" y="421" width="6.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="485.05" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,371,126 samples, 0.02%)</title><rect x="746.0" y="117" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="749.02" y="127.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (634,717 samples, 0.01%)</title><rect x="767.9" y="101" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="770.95" y="111.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (6,958,726 samples, 0.12%)</title><rect x="816.9" y="261" width="1.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="819.93" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (117,969,561 samples, 1.96%)</title><rect x="1018.8" y="357" width="23.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1021.81" y="367.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (124,457,809 samples, 2.07%)</title><rect x="1119.8" y="437" width="24.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1122.80" y="447.5" >s..</text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,042,225 samples, 0.03%)</title><rect x="935.3" y="357" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="938.33" y="367.5" ></text>
</g>
<g >
<title>RUN_ALL_TESTS (4,309,024,300 samples, 71.70%)</title><rect x="328.6" y="677" width="846.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="331.55" y="687.5" >RUN_ALL_TESTS</text>
</g>
<g >
<title>std::__is_constant_evaluated (1,890,725 samples, 0.03%)</title><rect x="1140.9" y="389" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1143.87" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (16,334,348 samples, 0.27%)</title><rect x="669.2" y="373" width="3.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="672.20" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator- (666,404 samples, 0.01%)</title><rect x="992.9" y="405" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="995.90" y="415.5" ></text>
</g>
<g >
<title>std::__copy_move_backward&lt;true, false, std::random_access_iterator_tag&gt;::__copy_move_b&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1,928,501 samples, 0.03%)</title><rect x="503.9" y="357" width="0.4" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="506.95" y="367.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (3,335,322 samples, 0.06%)</title><rect x="988.6" y="341" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="991.63" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (722,150 samples, 0.01%)</title><rect x="831.6" y="309" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="834.56" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (1,417,223 samples, 0.02%)</title><rect x="743.4" y="357" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="746.42" y="367.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1,396,927 samples, 0.02%)</title><rect x="613.8" y="341" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="616.85" y="351.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (650,891 samples, 0.01%)</title><rect x="758.2" y="85" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="761.23" y="95.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (3,678,968 samples, 0.06%)</title><rect x="654.1" y="389" width="0.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="657.13" y="399.5" ></text>
</g>
<g >
<title>testing::TestInfo::Run (4,308,101,970 samples, 71.69%)</title><rect x="328.6" y="581" width="845.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="331.55" y="591.5" >testing::TestInfo::Run</text>
</g>
<g >
<title>std::__unguarded_partition_pivot&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (11,167,936 samples, 0.19%)</title><rect x="780.6" y="245" width="2.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="783.62" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (2,838,425 samples, 0.05%)</title><rect x="889.3" y="357" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="892.29" y="367.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (736,966 samples, 0.01%)</title><rect x="819.1" y="261" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="822.12" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (1,411,264 samples, 0.02%)</title><rect x="847.9" y="325" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="850.88" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (667,768 samples, 0.01%)</title><rect x="503.7" y="357" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="506.67" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,310,322 samples, 0.02%)</title><rect x="1178.7" y="709" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1181.74" y="719.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (1,473,982 samples, 0.02%)</title><rect x="1040.3" y="325" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1043.29" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (725,564 samples, 0.01%)</title><rect x="1018.5" y="357" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1021.54" y="367.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (1,903,965 samples, 0.03%)</title><rect x="797.0" y="261" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="799.96" y="271.5" ></text>
</g>
<g >
<title>__tls_get_addr (2,569,864 samples, 0.04%)</title><rect x="514.0" y="421" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="517.01" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (12,160,013 samples, 0.20%)</title><rect x="403.2" y="405" width="2.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="406.17" y="415.5" ></text>
</g>
<g >
<title>__tls_get_addr (735,054 samples, 0.01%)</title><rect x="959.0" y="341" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="962.03" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,749,488 samples, 0.03%)</title><rect x="767.7" y="133" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="770.73" y="143.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5,733,128 samples, 0.10%)</title><rect x="793.3" y="277" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="796.31" y="287.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (640,423 samples, 0.01%)</title><rect x="788.8" y="261" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="791.83" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (1,218,947 samples, 0.02%)</title><rect x="1119.6" y="421" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1122.56" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::push_back (290,836,921 samples, 4.84%)</title><rect x="1094.8" y="485" width="57.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1097.77" y="495.5" >std::v..</text>
</g>
<g >
<title>std::operator&lt; (18,573,536 samples, 0.31%)</title><rect x="902.5" y="341" width="3.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="905.50" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1,259,030 samples, 0.02%)</title><rect x="591.5" y="405" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="594.48" y="415.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (734,312 samples, 0.01%)</title><rect x="448.2" y="469" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="451.22" y="479.5" ></text>
</g>
<g >
<title>std::swap&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3,550,091 samples, 0.06%)</title><rect x="991.1" y="357" width="0.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="994.12" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (654,924 samples, 0.01%)</title><rect x="1045.6" y="373" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1048.59" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::base (736,351 samples, 0.01%)</title><rect x="495.9" y="405" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="498.89" y="415.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (649,932 samples, 0.01%)</title><rect x="791.6" y="229" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="794.56" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (7,539,061 samples, 0.13%)</title><rect x="767.5" y="149" width="1.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="770.54" y="159.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (733,699 samples, 0.01%)</title><rect x="703.7" y="373" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="706.73" y="383.5" ></text>
</g>
<g >
<title>std::__sort_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (11,189,815 samples, 0.19%)</title><rect x="778.4" y="229" width="2.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="781.42" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (632,178 samples, 0.01%)</title><rect x="767.3" y="117" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="770.32" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (3,502,654 samples, 0.06%)</title><rect x="933.8" y="325" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="936.82" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (2,739,791 samples, 0.05%)</title><rect x="743.2" y="373" width="0.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="746.16" y="383.5" ></text>
</g>
<g >
<title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (721,906 samples, 0.01%)</title><rect x="759.0" y="181" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="762.04" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (628,612 samples, 0.01%)</title><rect x="761.3" y="117" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="764.26" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (25,224,143 samples, 0.42%)</title><rect x="443.1" y="421" width="5.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="446.13" y="431.5" ></text>
</g>
<g >
<title>testing::UnitTest::~UnitTest (679,871 samples, 0.01%)</title><rect x="1178.2" y="693" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1181.18" y="703.5" ></text>
</g>
<g >
<title>testing::internal::BoolFromGTestEnv (920,595 samples, 0.02%)</title><rect x="1174.7" y="661" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1177.65" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (689,133 samples, 0.01%)</title><rect x="774.2" y="165" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="777.15" y="175.5" ></text>
</g>
<g >
<title>std::destroy_at&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (62,760,488 samples, 1.04%)</title><rect x="1154.0" y="421" width="12.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1157.05" y="431.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (1,398,264 samples, 0.02%)</title><rect x="790.5" y="229" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="793.49" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (10,267,593 samples, 0.17%)</title><rect x="393.6" y="421" width="2.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="396.58" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_compare (1,342,847 samples, 0.02%)</title><rect x="570.1" y="357" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="573.12" y="367.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,047,692 samples, 0.03%)</title><rect x="1172.0" y="389" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1175.04" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,393,078 samples, 0.02%)</title><rect x="830.9" y="293" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="833.88" y="303.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (3,415,904 samples, 0.06%)</title><rect x="340.0" y="405" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="342.97" y="415.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (676,504 samples, 0.01%)</title><rect x="1170.6" y="373" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1173.58" y="383.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (6,902,820 samples, 0.11%)</title><rect x="1142.1" y="373" width="1.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1145.10" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt; (736,485 samples, 0.01%)</title><rect x="939.4" y="357" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="942.40" y="367.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::free (48,085,479 samples, 0.80%)</title><rect x="440.5" y="485" width="9.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="443.45" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (735,784 samples, 0.01%)</title><rect x="514.5" y="421" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="517.51" y="431.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (5,546,979 samples, 0.09%)</title><rect x="630.1" y="389" width="1.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="633.14" y="399.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (1,418,119 samples, 0.02%)</title><rect x="887.0" y="357" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="889.96" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (15,909,118 samples, 0.26%)</title><rect x="896.5" y="341" width="3.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="899.51" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,850,095 samples, 0.05%)</title><rect x="703.9" y="373" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="706.87" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__char_traits_cmp_cat&lt;std::char_traits&lt;char&gt; &gt; (1,372,322 samples, 0.02%)</title><rect x="1091.7" y="373" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1094.75" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (634,651 samples, 0.01%)</title><rect x="760.1" y="101" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="763.07" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (626,696 samples, 0.01%)</title><rect x="763.8" y="165" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="766.77" y="175.5" ></text>
</g>
<g >
<title>__tls_get_addr (1,472,259 samples, 0.02%)</title><rect x="352.1" y="437" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="355.08" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator&lt;=&gt;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (2,117,777 samples, 0.04%)</title><rect x="824.4" y="325" width="0.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="827.42" y="335.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (629,011 samples, 0.01%)</title><rect x="940.9" y="309" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="943.89" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator* (1,383,505 samples, 0.02%)</title><rect x="799.0" y="309" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="801.96" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator++ (5,654,151 samples, 0.09%)</title><rect x="942.8" y="373" width="1.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="945.75" y="383.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9,170,950 samples, 0.15%)</title><rect x="882.4" y="341" width="1.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="885.39" y="351.5" ></text>
</g>
<g >
<title>SortedUniqueVectoredList::Iterator::operator!= (1,412,549 samples, 0.02%)</title><rect x="427.5" y="469" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="430.46" y="479.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (1,433,756 samples, 0.02%)</title><rect x="446.8" y="357" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="449.84" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (2,912,688 samples, 0.05%)</title><rect x="636.7" y="405" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="639.68" y="415.5" ></text>
</g>
<g >
<title>std::operator&lt;=&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (162,622,482 samples, 2.71%)</title><rect x="957.4" y="357" width="31.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="960.36" y="367.5" >st..</text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (38,145,659 samples, 0.63%)</title><rect x="763.9" y="165" width="7.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="766.89" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (634,274 samples, 0.01%)</title><rect x="767.2" y="133" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="770.19" y="143.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (736,370 samples, 0.01%)</title><rect x="1174.1" y="373" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1177.14" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,014,442 samples, 0.03%)</title><rect x="340.8" y="389" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="343.78" y="399.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (4,432,454 samples, 0.07%)</title><rect x="243.2" y="693" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="246.21" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (736,370 samples, 0.01%)</title><rect x="1174.1" y="405" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1177.14" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3,351,973 samples, 0.06%)</title><rect x="752.4" y="101" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="755.43" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (628,280 samples, 0.01%)</title><rect x="792.1" y="261" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="795.08" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (661,101 samples, 0.01%)</title><rect x="498.7" y="357" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="501.66" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,747,821 samples, 0.03%)</title><rect x="771.0" y="117" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="774.04" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (36,322,735 samples, 0.60%)</title><rect x="621.1" y="389" width="7.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="624.12" y="399.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (672,162 samples, 0.01%)</title><rect x="391.7" y="421" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="394.68" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (661,565 samples, 0.01%)</title><rect x="339.1" y="421" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="342.05" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (1,454,568 samples, 0.02%)</title><rect x="367.1" y="437" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="370.08" y="447.5" ></text>
</g>
<g >
<title>testing::internal::ForEach&lt;std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt;, void  (679,871 samples, 0.01%)</title><rect x="1178.2" y="565" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1181.18" y="575.5" ></text>
</g>
<g >
<title>__tls_get_addr (4,993,907 samples, 0.08%)</title><rect x="1011.7" y="373" width="1.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1014.72" y="383.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (627,862 samples, 0.01%)</title><rect x="631.2" y="389" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="634.23" y="399.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (4,134,290 samples, 0.07%)</title><rect x="343.1" y="453" width="0.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="346.13" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (1,316,804 samples, 0.02%)</title><rect x="995.9" y="357" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="998.92" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memset (671,415 samples, 0.01%)</title><rect x="43.8" y="629" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="46.77" y="639.5" ></text>
</g>
<g >
<title>__asan_unregister_globals (681,079 samples, 0.01%)</title><rect x="43.6" y="661" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="46.64" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (100,062,062 samples, 1.67%)</title><rect x="855.3" y="309" width="19.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="858.35" y="319.5" ></text>
</g>
<g >
<title>__libc_start_call_main (4,309,024,300 samples, 71.70%)</title><rect x="328.6" y="709" width="846.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="331.55" y="719.5" >__libc_start_call_main</text>
</g>
<g >
<title>__interceptor___tls_get_addr (1,337,760 samples, 0.02%)</title><rect x="463.4" y="453" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="466.42" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator&lt;=&gt;&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (640,127 samples, 0.01%)</title><rect x="1042.9" y="389" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1045.88" y="399.5" ></text>
</g>
<g >
<title>[tests] (736,824 samples, 0.01%)</title><rect x="1055.6" y="389" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1058.62" y="399.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (686,136 samples, 0.01%)</title><rect x="130.5" y="677" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="133.50" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (719,578 samples, 0.01%)</title><rect x="936.5" y="293" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="939.54" y="303.5" ></text>
</g>
<g >
<title>std::__sort_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (51,708,015 samples, 0.86%)</title><rect x="763.5" y="197" width="10.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="766.45" y="207.5" ></text>
</g>
<g >
<title>__asan_poison_stack_memory (622,803 samples, 0.01%)</title><rect x="84.2" y="677" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="87.22" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (661,521 samples, 0.01%)</title><rect x="491.0" y="453" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="493.96" y="463.5" ></text>
</g>
<g >
<title>std::array&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 10ul&gt;::array (220,316,758 samples, 3.67%)</title><rect x="381.6" y="453" width="43.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="384.60" y="463.5" >std:..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (11,667,548 samples, 0.19%)</title><rect x="479.0" y="421" width="2.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="481.97" y="431.5" ></text>
</g>
<g >
<title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (18,400,316 samples, 0.31%)</title><rect x="744.8" y="133" width="3.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="747.80" y="143.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (629,011 samples, 0.01%)</title><rect x="940.9" y="325" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="943.89" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,386,931 samples, 0.02%)</title><rect x="908.8" y="325" width="0.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="911.83" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (633,289 samples, 0.01%)</title><rect x="748.8" y="117" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="751.84" y="127.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7,772,159 samples, 0.13%)</title><rect x="565.4" y="341" width="1.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="568.43" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (156,988,558 samples, 2.61%)</title><rect x="460.3" y="469" width="30.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="463.26" y="479.5" >st..</text>
</g>
<g >
<title>[tests] (736,287 samples, 0.01%)</title><rect x="833.6" y="341" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="836.62" y="351.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (972,215 samples, 0.02%)</title><rect x="787.7" y="197" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="790.74" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (634,316 samples, 0.01%)</title><rect x="761.6" y="133" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="764.57" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (4,588,754 samples, 0.08%)</title><rect x="781.7" y="181" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="784.69" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::swap (2,843,694 samples, 0.05%)</title><rect x="801.2" y="293" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="804.20" y="303.5" ></text>
</g>
<g >
<title>std::iter_swap&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (721,906 samples, 0.01%)</title><rect x="759.0" y="165" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="762.04" y="175.5" ></text>
</g>
<g >
<title>__interceptor_memmove (631,741 samples, 0.01%)</title><rect x="1169.4" y="421" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1172.38" y="431.5" ></text>
</g>
</g>
</svg>
